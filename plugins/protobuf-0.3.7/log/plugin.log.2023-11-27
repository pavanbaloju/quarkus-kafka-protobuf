2023-11-27T05:49:17.180230Z  INFO tokio-runtime-worker construct_protobuf_interaction_for_message{config={"address": Value { kind: Some(StructValue(Struct { fields: {"city": Value { kind: Some(StringValue("matching(regex, '^[A-Z]*$', 'MY CITY')")) }, "indian": Value { kind: Some(StringValue("matching(boolean, true)")) }, "state": Value { kind: Some(StringValue("matching(regex, '^[A-Z]*$', 'TELANGANA')")) }, "zip_code": Value { kind: Some(StringValue("matching(regex, '^[1-9]{1}[0-9]{5}$', '500001')")) }} })) }, "age": Value { kind: Some(StringValue("matching(integer, 50)")) }, "email": Value { kind: Some(StringValue("matching(equalTo, 'abc@gmail.com')")) }, "grades": Value { kind: Some(StructValue(Struct { fields: {"pact:match": Value { kind: Some(StringValue("eachKey(matching(regex, '^[a-z]*$', 'math')), eachValue(matching(integer, 10))")) }} })) }, "is_student": Value { kind: Some(StringValue("matching(boolean, true)")) }, "name": Value { kind: Some(StringValue("matching(regex, '^[A-Z]*$', 'JOHN')")) }, "pact:message-type": Value { kind: Some(StringValue("Person")) }, "pact:proto": Value { kind: Some(StringValue("/Users/pavanbaloju/Projects/quarkus-kafka-protobuf/src/main/proto/Person.proto")) }, "phone_numbers": Value { kind: Some(StructValue(Struct { fields: {"pact:match": Value { kind: Some(StringValue("eachValue(matching($'phone_number'))")) }, "phone_number": Value { kind: Some(StructValue(Struct { fields: {"number": Value { kind: Some(StringValue("matching(regex, '^[6-9]{1}[0-9]{9}$', '9999888870')")) }, "type": Value { kind: Some(StringValue("matching(type, 'MOBILE')")) }} })) }} })) }} message_name="Person" message_part="" metadata=None}:construct_message_field{path=$.address field_name=address value={"city":"matching(regex, '^[A-Z]*$', 'MY CITY')","indian":"matching(boolean, true)","state":"matching(regex, '^[A-Z]*$', 'TELANGANA')","zip_code":"matching(regex, '^[1-9]{1}[0-9]{5}$', '500001')"}}:build_embedded_message_field_value{path=$.address field="address" value={"city":"matching(regex, '^[A-Z]*$', 'MY CITY')","indian":"matching(boolean, true)","state":"matching(regex, '^[A-Z]*$', 'TELANGANA')","zip_code":"matching(regex, '^[1-9]{1}[0-9]{5}$', '500001')"}}:build_single_embedded_field_value{path=$.address field_type=Normal field=address value={"city":"matching(regex, '^[A-Z]*$', 'MY CITY')","indian":"matching(boolean, true)","state":"matching(regex, '^[A-Z]*$', 'TELANGANA')","zip_code":"matching(regex, '^[1-9]{1}[0-9]{5}$', '500001')"}}:construct_message_field{path=$.address.city field_name=city value="matching(regex, '^[A-Z]*$', 'MY CITY')"}:build_field_value{path=$.address.city field_type=Normal field_name=city value="matching(regex, '^[A-Z]*$', 'MY CITY')"}: pact_protobuf_plugin::protobuf: return=Ok(Some(MessageFieldValue { name: "city", raw_value: Some("MY CITY"), rtype: String("MY CITY") }))
2023-11-27T05:49:17.180282Z  INFO tokio-runtime-worker construct_protobuf_interaction_for_message{config={"address": Value { kind: Some(StructValue(Struct { fields: {"city": Value { kind: Some(StringValue("matching(regex, '^[A-Z]*$', 'MY CITY')")) }, "indian": Value { kind: Some(StringValue("matching(boolean, true)")) }, "state": Value { kind: Some(StringValue("matching(regex, '^[A-Z]*$', 'TELANGANA')")) }, "zip_code": Value { kind: Some(StringValue("matching(regex, '^[1-9]{1}[0-9]{5}$', '500001')")) }} })) }, "age": Value { kind: Some(StringValue("matching(integer, 50)")) }, "email": Value { kind: Some(StringValue("matching(equalTo, 'abc@gmail.com')")) }, "grades": Value { kind: Some(StructValue(Struct { fields: {"pact:match": Value { kind: Some(StringValue("eachKey(matching(regex, '^[a-z]*$', 'math')), eachValue(matching(integer, 10))")) }} })) }, "is_student": Value { kind: Some(StringValue("matching(boolean, true)")) }, "name": Value { kind: Some(StringValue("matching(regex, '^[A-Z]*$', 'JOHN')")) }, "pact:message-type": Value { kind: Some(StringValue("Person")) }, "pact:proto": Value { kind: Some(StringValue("/Users/pavanbaloju/Projects/quarkus-kafka-protobuf/src/main/proto/Person.proto")) }, "phone_numbers": Value { kind: Some(StructValue(Struct { fields: {"pact:match": Value { kind: Some(StringValue("eachValue(matching($'phone_number'))")) }, "phone_number": Value { kind: Some(StructValue(Struct { fields: {"number": Value { kind: Some(StringValue("matching(regex, '^[6-9]{1}[0-9]{9}$', '9999888870')")) }, "type": Value { kind: Some(StringValue("matching(type, 'MOBILE')")) }} })) }} })) }} message_name="Person" message_part="" metadata=None}:construct_message_field{path=$.address field_name=address value={"city":"matching(regex, '^[A-Z]*$', 'MY CITY')","indian":"matching(boolean, true)","state":"matching(regex, '^[A-Z]*$', 'TELANGANA')","zip_code":"matching(regex, '^[1-9]{1}[0-9]{5}$', '500001')"}}:build_embedded_message_field_value{path=$.address field="address" value={"city":"matching(regex, '^[A-Z]*$', 'MY CITY')","indian":"matching(boolean, true)","state":"matching(regex, '^[A-Z]*$', 'TELANGANA')","zip_code":"matching(regex, '^[1-9]{1}[0-9]{5}$', '500001')"}}:build_single_embedded_field_value{path=$.address field_type=Normal field=address value={"city":"matching(regex, '^[A-Z]*$', 'MY CITY')","indian":"matching(boolean, true)","state":"matching(regex, '^[A-Z]*$', 'TELANGANA')","zip_code":"matching(regex, '^[1-9]{1}[0-9]{5}$', '500001')"}}:construct_message_field{path=$.address.city field_name=city value="matching(regex, '^[A-Z]*$', 'MY CITY')"}: pact_protobuf_plugin::protobuf: return=Ok(())
2023-11-27T05:49:17.180388Z  INFO tokio-runtime-worker construct_protobuf_interaction_for_message{config={"address": Value { kind: Some(StructValue(Struct { fields: {"city": Value { kind: Some(StringValue("matching(regex, '^[A-Z]*$', 'MY CITY')")) }, "indian": Value { kind: Some(StringValue("matching(boolean, true)")) }, "state": Value { kind: Some(StringValue("matching(regex, '^[A-Z]*$', 'TELANGANA')")) }, "zip_code": Value { kind: Some(StringValue("matching(regex, '^[1-9]{1}[0-9]{5}$', '500001')")) }} })) }, "age": Value { kind: Some(StringValue("matching(integer, 50)")) }, "email": Value { kind: Some(StringValue("matching(equalTo, 'abc@gmail.com')")) }, "grades": Value { kind: Some(StructValue(Struct { fields: {"pact:match": Value { kind: Some(StringValue("eachKey(matching(regex, '^[a-z]*$', 'math')), eachValue(matching(integer, 10))")) }} })) }, "is_student": Value { kind: Some(StringValue("matching(boolean, true)")) }, "name": Value { kind: Some(StringValue("matching(regex, '^[A-Z]*$', 'JOHN')")) }, "pact:message-type": Value { kind: Some(StringValue("Person")) }, "pact:proto": Value { kind: Some(StringValue("/Users/pavanbaloju/Projects/quarkus-kafka-protobuf/src/main/proto/Person.proto")) }, "phone_numbers": Value { kind: Some(StructValue(Struct { fields: {"pact:match": Value { kind: Some(StringValue("eachValue(matching($'phone_number'))")) }, "phone_number": Value { kind: Some(StructValue(Struct { fields: {"number": Value { kind: Some(StringValue("matching(regex, '^[6-9]{1}[0-9]{9}$', '9999888870')")) }, "type": Value { kind: Some(StringValue("matching(type, 'MOBILE')")) }} })) }} })) }} message_name="Person" message_part="" metadata=None}:construct_message_field{path=$.address field_name=address value={"city":"matching(regex, '^[A-Z]*$', 'MY CITY')","indian":"matching(boolean, true)","state":"matching(regex, '^[A-Z]*$', 'TELANGANA')","zip_code":"matching(regex, '^[1-9]{1}[0-9]{5}$', '500001')"}}:build_embedded_message_field_value{path=$.address field="address" value={"city":"matching(regex, '^[A-Z]*$', 'MY CITY')","indian":"matching(boolean, true)","state":"matching(regex, '^[A-Z]*$', 'TELANGANA')","zip_code":"matching(regex, '^[1-9]{1}[0-9]{5}$', '500001')"}}:build_single_embedded_field_value{path=$.address field_type=Normal field=address value={"city":"matching(regex, '^[A-Z]*$', 'MY CITY')","indian":"matching(boolean, true)","state":"matching(regex, '^[A-Z]*$', 'TELANGANA')","zip_code":"matching(regex, '^[1-9]{1}[0-9]{5}$', '500001')"}}:construct_message_field{path=$.address.indian field_name=indian value="matching(boolean, true)"}:build_field_value{path=$.address.indian field_type=Normal field_name=indian value="matching(boolean, true)"}: pact_protobuf_plugin::protobuf: return=Ok(Some(MessageFieldValue { name: "indian", raw_value: Some("true"), rtype: Boolean(true) }))
2023-11-27T05:49:17.180478Z  INFO tokio-runtime-worker construct_protobuf_interaction_for_message{config={"address": Value { kind: Some(StructValue(Struct { fields: {"city": Value { kind: Some(StringValue("matching(regex, '^[A-Z]*$', 'MY CITY')")) }, "indian": Value { kind: Some(StringValue("matching(boolean, true)")) }, "state": Value { kind: Some(StringValue("matching(regex, '^[A-Z]*$', 'TELANGANA')")) }, "zip_code": Value { kind: Some(StringValue("matching(regex, '^[1-9]{1}[0-9]{5}$', '500001')")) }} })) }, "age": Value { kind: Some(StringValue("matching(integer, 50)")) }, "email": Value { kind: Some(StringValue("matching(equalTo, 'abc@gmail.com')")) }, "grades": Value { kind: Some(StructValue(Struct { fields: {"pact:match": Value { kind: Some(StringValue("eachKey(matching(regex, '^[a-z]*$', 'math')), eachValue(matching(integer, 10))")) }} })) }, "is_student": Value { kind: Some(StringValue("matching(boolean, true)")) }, "name": Value { kind: Some(StringValue("matching(regex, '^[A-Z]*$', 'JOHN')")) }, "pact:message-type": Value { kind: Some(StringValue("Person")) }, "pact:proto": Value { kind: Some(StringValue("/Users/pavanbaloju/Projects/quarkus-kafka-protobuf/src/main/proto/Person.proto")) }, "phone_numbers": Value { kind: Some(StructValue(Struct { fields: {"pact:match": Value { kind: Some(StringValue("eachValue(matching($'phone_number'))")) }, "phone_number": Value { kind: Some(StructValue(Struct { fields: {"number": Value { kind: Some(StringValue("matching(regex, '^[6-9]{1}[0-9]{9}$', '9999888870')")) }, "type": Value { kind: Some(StringValue("matching(type, 'MOBILE')")) }} })) }} })) }} message_name="Person" message_part="" metadata=None}:construct_message_field{path=$.address field_name=address value={"city":"matching(regex, '^[A-Z]*$', 'MY CITY')","indian":"matching(boolean, true)","state":"matching(regex, '^[A-Z]*$', 'TELANGANA')","zip_code":"matching(regex, '^[1-9]{1}[0-9]{5}$', '500001')"}}:build_embedded_message_field_value{path=$.address field="address" value={"city":"matching(regex, '^[A-Z]*$', 'MY CITY')","indian":"matching(boolean, true)","state":"matching(regex, '^[A-Z]*$', 'TELANGANA')","zip_code":"matching(regex, '^[1-9]{1}[0-9]{5}$', '500001')"}}:build_single_embedded_field_value{path=$.address field_type=Normal field=address value={"city":"matching(regex, '^[A-Z]*$', 'MY CITY')","indian":"matching(boolean, true)","state":"matching(regex, '^[A-Z]*$', 'TELANGANA')","zip_code":"matching(regex, '^[1-9]{1}[0-9]{5}$', '500001')"}}:construct_message_field{path=$.address.indian field_name=indian value="matching(boolean, true)"}: pact_protobuf_plugin::protobuf: return=Ok(())
2023-11-27T05:49:17.180560Z  INFO tokio-runtime-worker construct_protobuf_interaction_for_message{config={"address": Value { kind: Some(StructValue(Struct { fields: {"city": Value { kind: Some(StringValue("matching(regex, '^[A-Z]*$', 'MY CITY')")) }, "indian": Value { kind: Some(StringValue("matching(boolean, true)")) }, "state": Value { kind: Some(StringValue("matching(regex, '^[A-Z]*$', 'TELANGANA')")) }, "zip_code": Value { kind: Some(StringValue("matching(regex, '^[1-9]{1}[0-9]{5}$', '500001')")) }} })) }, "age": Value { kind: Some(StringValue("matching(integer, 50)")) }, "email": Value { kind: Some(StringValue("matching(equalTo, 'abc@gmail.com')")) }, "grades": Value { kind: Some(StructValue(Struct { fields: {"pact:match": Value { kind: Some(StringValue("eachKey(matching(regex, '^[a-z]*$', 'math')), eachValue(matching(integer, 10))")) }} })) }, "is_student": Value { kind: Some(StringValue("matching(boolean, true)")) }, "name": Value { kind: Some(StringValue("matching(regex, '^[A-Z]*$', 'JOHN')")) }, "pact:message-type": Value { kind: Some(StringValue("Person")) }, "pact:proto": Value { kind: Some(StringValue("/Users/pavanbaloju/Projects/quarkus-kafka-protobuf/src/main/proto/Person.proto")) }, "phone_numbers": Value { kind: Some(StructValue(Struct { fields: {"pact:match": Value { kind: Some(StringValue("eachValue(matching($'phone_number'))")) }, "phone_number": Value { kind: Some(StructValue(Struct { fields: {"number": Value { kind: Some(StringValue("matching(regex, '^[6-9]{1}[0-9]{9}$', '9999888870')")) }, "type": Value { kind: Some(StringValue("matching(type, 'MOBILE')")) }} })) }} })) }} message_name="Person" message_part="" metadata=None}:construct_message_field{path=$.address field_name=address value={"city":"matching(regex, '^[A-Z]*$', 'MY CITY')","indian":"matching(boolean, true)","state":"matching(regex, '^[A-Z]*$', 'TELANGANA')","zip_code":"matching(regex, '^[1-9]{1}[0-9]{5}$', '500001')"}}:build_embedded_message_field_value{path=$.address field="address" value={"city":"matching(regex, '^[A-Z]*$', 'MY CITY')","indian":"matching(boolean, true)","state":"matching(regex, '^[A-Z]*$', 'TELANGANA')","zip_code":"matching(regex, '^[1-9]{1}[0-9]{5}$', '500001')"}}:build_single_embedded_field_value{path=$.address field_type=Normal field=address value={"city":"matching(regex, '^[A-Z]*$', 'MY CITY')","indian":"matching(boolean, true)","state":"matching(regex, '^[A-Z]*$', 'TELANGANA')","zip_code":"matching(regex, '^[1-9]{1}[0-9]{5}$', '500001')"}}:construct_message_field{path=$.address.state field_name=state value="matching(regex, '^[A-Z]*$', 'TELANGANA')"}:build_field_value{path=$.address.state field_type=Normal field_name=state value="matching(regex, '^[A-Z]*$', 'TELANGANA')"}: pact_protobuf_plugin::protobuf: return=Ok(Some(MessageFieldValue { name: "state", raw_value: Some("TELANGANA"), rtype: String("TELANGANA") }))
2023-11-27T05:49:17.180601Z  INFO tokio-runtime-worker construct_protobuf_interaction_for_message{config={"address": Value { kind: Some(StructValue(Struct { fields: {"city": Value { kind: Some(StringValue("matching(regex, '^[A-Z]*$', 'MY CITY')")) }, "indian": Value { kind: Some(StringValue("matching(boolean, true)")) }, "state": Value { kind: Some(StringValue("matching(regex, '^[A-Z]*$', 'TELANGANA')")) }, "zip_code": Value { kind: Some(StringValue("matching(regex, '^[1-9]{1}[0-9]{5}$', '500001')")) }} })) }, "age": Value { kind: Some(StringValue("matching(integer, 50)")) }, "email": Value { kind: Some(StringValue("matching(equalTo, 'abc@gmail.com')")) }, "grades": Value { kind: Some(StructValue(Struct { fields: {"pact:match": Value { kind: Some(StringValue("eachKey(matching(regex, '^[a-z]*$', 'math')), eachValue(matching(integer, 10))")) }} })) }, "is_student": Value { kind: Some(StringValue("matching(boolean, true)")) }, "name": Value { kind: Some(StringValue("matching(regex, '^[A-Z]*$', 'JOHN')")) }, "pact:message-type": Value { kind: Some(StringValue("Person")) }, "pact:proto": Value { kind: Some(StringValue("/Users/pavanbaloju/Projects/quarkus-kafka-protobuf/src/main/proto/Person.proto")) }, "phone_numbers": Value { kind: Some(StructValue(Struct { fields: {"pact:match": Value { kind: Some(StringValue("eachValue(matching($'phone_number'))")) }, "phone_number": Value { kind: Some(StructValue(Struct { fields: {"number": Value { kind: Some(StringValue("matching(regex, '^[6-9]{1}[0-9]{9}$', '9999888870')")) }, "type": Value { kind: Some(StringValue("matching(type, 'MOBILE')")) }} })) }} })) }} message_name="Person" message_part="" metadata=None}:construct_message_field{path=$.address field_name=address value={"city":"matching(regex, '^[A-Z]*$', 'MY CITY')","indian":"matching(boolean, true)","state":"matching(regex, '^[A-Z]*$', 'TELANGANA')","zip_code":"matching(regex, '^[1-9]{1}[0-9]{5}$', '500001')"}}:build_embedded_message_field_value{path=$.address field="address" value={"city":"matching(regex, '^[A-Z]*$', 'MY CITY')","indian":"matching(boolean, true)","state":"matching(regex, '^[A-Z]*$', 'TELANGANA')","zip_code":"matching(regex, '^[1-9]{1}[0-9]{5}$', '500001')"}}:build_single_embedded_field_value{path=$.address field_type=Normal field=address value={"city":"matching(regex, '^[A-Z]*$', 'MY CITY')","indian":"matching(boolean, true)","state":"matching(regex, '^[A-Z]*$', 'TELANGANA')","zip_code":"matching(regex, '^[1-9]{1}[0-9]{5}$', '500001')"}}:construct_message_field{path=$.address.state field_name=state value="matching(regex, '^[A-Z]*$', 'TELANGANA')"}: pact_protobuf_plugin::protobuf: return=Ok(())
2023-11-27T05:49:17.180667Z  INFO tokio-runtime-worker construct_protobuf_interaction_for_message{config={"address": Value { kind: Some(StructValue(Struct { fields: {"city": Value { kind: Some(StringValue("matching(regex, '^[A-Z]*$', 'MY CITY')")) }, "indian": Value { kind: Some(StringValue("matching(boolean, true)")) }, "state": Value { kind: Some(StringValue("matching(regex, '^[A-Z]*$', 'TELANGANA')")) }, "zip_code": Value { kind: Some(StringValue("matching(regex, '^[1-9]{1}[0-9]{5}$', '500001')")) }} })) }, "age": Value { kind: Some(StringValue("matching(integer, 50)")) }, "email": Value { kind: Some(StringValue("matching(equalTo, 'abc@gmail.com')")) }, "grades": Value { kind: Some(StructValue(Struct { fields: {"pact:match": Value { kind: Some(StringValue("eachKey(matching(regex, '^[a-z]*$', 'math')), eachValue(matching(integer, 10))")) }} })) }, "is_student": Value { kind: Some(StringValue("matching(boolean, true)")) }, "name": Value { kind: Some(StringValue("matching(regex, '^[A-Z]*$', 'JOHN')")) }, "pact:message-type": Value { kind: Some(StringValue("Person")) }, "pact:proto": Value { kind: Some(StringValue("/Users/pavanbaloju/Projects/quarkus-kafka-protobuf/src/main/proto/Person.proto")) }, "phone_numbers": Value { kind: Some(StructValue(Struct { fields: {"pact:match": Value { kind: Some(StringValue("eachValue(matching($'phone_number'))")) }, "phone_number": Value { kind: Some(StructValue(Struct { fields: {"number": Value { kind: Some(StringValue("matching(regex, '^[6-9]{1}[0-9]{9}$', '9999888870')")) }, "type": Value { kind: Some(StringValue("matching(type, 'MOBILE')")) }} })) }} })) }} message_name="Person" message_part="" metadata=None}:construct_message_field{path=$.address field_name=address value={"city":"matching(regex, '^[A-Z]*$', 'MY CITY')","indian":"matching(boolean, true)","state":"matching(regex, '^[A-Z]*$', 'TELANGANA')","zip_code":"matching(regex, '^[1-9]{1}[0-9]{5}$', '500001')"}}:build_embedded_message_field_value{path=$.address field="address" value={"city":"matching(regex, '^[A-Z]*$', 'MY CITY')","indian":"matching(boolean, true)","state":"matching(regex, '^[A-Z]*$', 'TELANGANA')","zip_code":"matching(regex, '^[1-9]{1}[0-9]{5}$', '500001')"}}:build_single_embedded_field_value{path=$.address field_type=Normal field=address value={"city":"matching(regex, '^[A-Z]*$', 'MY CITY')","indian":"matching(boolean, true)","state":"matching(regex, '^[A-Z]*$', 'TELANGANA')","zip_code":"matching(regex, '^[1-9]{1}[0-9]{5}$', '500001')"}}:construct_message_field{path=$.address.zip_code field_name=zip_code value="matching(regex, '^[1-9]{1}[0-9]{5}$', '500001')"}:build_field_value{path=$.address.zip_code field_type=Normal field_name=zip_code value="matching(regex, '^[1-9]{1}[0-9]{5}$', '500001')"}: pact_protobuf_plugin::protobuf: return=Ok(Some(MessageFieldValue { name: "zip_code", raw_value: Some("500001"), rtype: String("500001") }))
2023-11-27T05:49:17.180705Z  INFO tokio-runtime-worker construct_protobuf_interaction_for_message{config={"address": Value { kind: Some(StructValue(Struct { fields: {"city": Value { kind: Some(StringValue("matching(regex, '^[A-Z]*$', 'MY CITY')")) }, "indian": Value { kind: Some(StringValue("matching(boolean, true)")) }, "state": Value { kind: Some(StringValue("matching(regex, '^[A-Z]*$', 'TELANGANA')")) }, "zip_code": Value { kind: Some(StringValue("matching(regex, '^[1-9]{1}[0-9]{5}$', '500001')")) }} })) }, "age": Value { kind: Some(StringValue("matching(integer, 50)")) }, "email": Value { kind: Some(StringValue("matching(equalTo, 'abc@gmail.com')")) }, "grades": Value { kind: Some(StructValue(Struct { fields: {"pact:match": Value { kind: Some(StringValue("eachKey(matching(regex, '^[a-z]*$', 'math')), eachValue(matching(integer, 10))")) }} })) }, "is_student": Value { kind: Some(StringValue("matching(boolean, true)")) }, "name": Value { kind: Some(StringValue("matching(regex, '^[A-Z]*$', 'JOHN')")) }, "pact:message-type": Value { kind: Some(StringValue("Person")) }, "pact:proto": Value { kind: Some(StringValue("/Users/pavanbaloju/Projects/quarkus-kafka-protobuf/src/main/proto/Person.proto")) }, "phone_numbers": Value { kind: Some(StructValue(Struct { fields: {"pact:match": Value { kind: Some(StringValue("eachValue(matching($'phone_number'))")) }, "phone_number": Value { kind: Some(StructValue(Struct { fields: {"number": Value { kind: Some(StringValue("matching(regex, '^[6-9]{1}[0-9]{9}$', '9999888870')")) }, "type": Value { kind: Some(StringValue("matching(type, 'MOBILE')")) }} })) }} })) }} message_name="Person" message_part="" metadata=None}:construct_message_field{path=$.address field_name=address value={"city":"matching(regex, '^[A-Z]*$', 'MY CITY')","indian":"matching(boolean, true)","state":"matching(regex, '^[A-Z]*$', 'TELANGANA')","zip_code":"matching(regex, '^[1-9]{1}[0-9]{5}$', '500001')"}}:build_embedded_message_field_value{path=$.address field="address" value={"city":"matching(regex, '^[A-Z]*$', 'MY CITY')","indian":"matching(boolean, true)","state":"matching(regex, '^[A-Z]*$', 'TELANGANA')","zip_code":"matching(regex, '^[1-9]{1}[0-9]{5}$', '500001')"}}:build_single_embedded_field_value{path=$.address field_type=Normal field=address value={"city":"matching(regex, '^[A-Z]*$', 'MY CITY')","indian":"matching(boolean, true)","state":"matching(regex, '^[A-Z]*$', 'TELANGANA')","zip_code":"matching(regex, '^[1-9]{1}[0-9]{5}$', '500001')"}}:construct_message_field{path=$.address.zip_code field_name=zip_code value="matching(regex, '^[1-9]{1}[0-9]{5}$', '500001')"}: pact_protobuf_plugin::protobuf: return=Ok(())
2023-11-27T05:49:17.180757Z  INFO tokio-runtime-worker construct_protobuf_interaction_for_message{config={"address": Value { kind: Some(StructValue(Struct { fields: {"city": Value { kind: Some(StringValue("matching(regex, '^[A-Z]*$', 'MY CITY')")) }, "indian": Value { kind: Some(StringValue("matching(boolean, true)")) }, "state": Value { kind: Some(StringValue("matching(regex, '^[A-Z]*$', 'TELANGANA')")) }, "zip_code": Value { kind: Some(StringValue("matching(regex, '^[1-9]{1}[0-9]{5}$', '500001')")) }} })) }, "age": Value { kind: Some(StringValue("matching(integer, 50)")) }, "email": Value { kind: Some(StringValue("matching(equalTo, 'abc@gmail.com')")) }, "grades": Value { kind: Some(StructValue(Struct { fields: {"pact:match": Value { kind: Some(StringValue("eachKey(matching(regex, '^[a-z]*$', 'math')), eachValue(matching(integer, 10))")) }} })) }, "is_student": Value { kind: Some(StringValue("matching(boolean, true)")) }, "name": Value { kind: Some(StringValue("matching(regex, '^[A-Z]*$', 'JOHN')")) }, "pact:message-type": Value { kind: Some(StringValue("Person")) }, "pact:proto": Value { kind: Some(StringValue("/Users/pavanbaloju/Projects/quarkus-kafka-protobuf/src/main/proto/Person.proto")) }, "phone_numbers": Value { kind: Some(StructValue(Struct { fields: {"pact:match": Value { kind: Some(StringValue("eachValue(matching($'phone_number'))")) }, "phone_number": Value { kind: Some(StructValue(Struct { fields: {"number": Value { kind: Some(StringValue("matching(regex, '^[6-9]{1}[0-9]{9}$', '9999888870')")) }, "type": Value { kind: Some(StringValue("matching(type, 'MOBILE')")) }} })) }} })) }} message_name="Person" message_part="" metadata=None}:construct_message_field{path=$.address field_name=address value={"city":"matching(regex, '^[A-Z]*$', 'MY CITY')","indian":"matching(boolean, true)","state":"matching(regex, '^[A-Z]*$', 'TELANGANA')","zip_code":"matching(regex, '^[1-9]{1}[0-9]{5}$', '500001')"}}:build_embedded_message_field_value{path=$.address field="address" value={"city":"matching(regex, '^[A-Z]*$', 'MY CITY')","indian":"matching(boolean, true)","state":"matching(regex, '^[A-Z]*$', 'TELANGANA')","zip_code":"matching(regex, '^[1-9]{1}[0-9]{5}$', '500001')"}}:build_single_embedded_field_value{path=$.address field_type=Normal field=address value={"city":"matching(regex, '^[A-Z]*$', 'MY CITY')","indian":"matching(boolean, true)","state":"matching(regex, '^[A-Z]*$', 'TELANGANA')","zip_code":"matching(regex, '^[1-9]{1}[0-9]{5}$', '500001')"}}: pact_protobuf_plugin::protobuf: return=Ok(Some(MessageFieldValue { name: "address", raw_value: None, rtype: Message(MessageBuilder { file_descriptor: FileDescriptorProto { name: Some("Person.proto"), package: None, dependency: [], public_dependency: [], weak_dependency: [], message_type: [DescriptorProto { name: Some("Person"), field: [FieldDescriptorProto { name: Some("name"), number: Some(1), label: Some(Optional), r#type: Some(String), type_name: None, extendee: None, default_value: None, oneof_index: None, json_name: Some("name"), options: None, proto3_optional: None }, FieldDescriptorProto { name: Some("age"), number: Some(2), label: Some(Optional), r#type: Some(Int32), type_name: None, extendee: None, default_value: None, oneof_index: None, json_name: Some("age"), options: None, proto3_optional: None }, FieldDescriptorProto { name: Some("email"), number: Some(3), label: Some(Optional), r#type: Some(String), type_name: None, extendee: None, default_value: None, oneof_index: None, json_name: Some("email"), options: None, proto3_optional: None }, FieldDescriptorProto { name: Some("address"), number: Some(4), label: Some(Optional), r#type: Some(Message), type_name: Some(".Address"), extendee: None, default_value: None, oneof_index: None, json_name: Some("address"), options: None, proto3_optional: None }, FieldDescriptorProto { name: Some("phone_numbers"), number: Some(5), label: Some(Repeated), r#type: Some(Message), type_name: Some(".PhoneNumber"), extendee: None, default_value: None, oneof_index: None, json_name: Some("phoneNumbers"), options: None, proto3_optional: None }, FieldDescriptorProto { name: Some("is_student"), number: Some(6), label: Some(Optional), r#type: Some(Bool), type_name: None, extendee: None, default_value: None, oneof_index: None, json_name: Some("isStudent"), options: None, proto3_optional: None }, FieldDescriptorProto { name: Some("grades"), number: Some(7), label: Some(Repeated), r#type: Some(Message), type_name: Some(".Person.GradesEntry"), extendee: None, default_value: None, oneof_index: None, json_name: Some("grades"), options: None, proto3_optional: None }], extension: [], nested_type: [DescriptorProto { name: Some("GradesEntry"), field: [FieldDescriptorProto { name: Some("key"), number: Some(1), label: Some(Optional), r#type: Some(String), type_name: None, extendee: None, default_value: None, oneof_index: None, json_name: Some("key"), options: None, proto3_optional: None }, FieldDescriptorProto { name: Some("value"), number: Some(2), label: Some(Optional), r#type: Some(Int32), type_name: None, extendee: None, default_value: None, oneof_index: None, json_name: Some("value"), options: None, proto3_optional: None }], extension: [], nested_type: [], enum_type: [], extension_range: [], oneof_decl: [], options: Some(MessageOptions { message_set_wire_format: None, no_standard_descriptor_accessor: None, deprecated: None, map_entry: Some(true), uninterpreted_option: [] }), reserved_range: [], reserved_name: [] }], enum_type: [], extension_range: [], oneof_decl: [], options: None, reserved_range: [], reserved_name: [] }, DescriptorProto { name: Some("Address"), field: [FieldDescriptorProto { name: Some("city"), number: Some(2), label: Some(Optional), r#type: Some(String), type_name: None, extendee: None, default_value: None, oneof_index: None, json_name: Some("city"), options: None, proto3_optional: None }, FieldDescriptorProto { name: Some("state"), number: Some(3), label: Some(Optional), r#type: Some(String), type_name: None, extendee: None, default_value: None, oneof_index: None, json_name: Some("state"), options: None, proto3_optional: None }, FieldDescriptorProto { name: Some("zip_code"), number: Some(4), label: Some(Optional), r#type: Some(String), type_name: None, extendee: None, default_value: None, oneof_index: None, json_name: Some("zipCode"), options: None, proto3_optional: None }, FieldDescriptorProto { name: Some("indian"), number: Some(5), label: Some(Optional), r#type: Some(Bool), type_name: None, extendee: None, default_value: None, oneof_index: None, json_name: Some("indian"), options: None, proto3_optional: None }], extension: [], nested_type: [], enum_type: [], extension_range: [], oneof_decl: [], options: None, reserved_range: [], reserved_name: [] }, DescriptorProto { name: Some("PhoneNumber"), field: [FieldDescriptorProto { name: Some("number"), number: Some(1), label: Some(Optional), r#type: Some(String), type_name: None, extendee: None, default_value: None, oneof_index: None, json_name: Some("number"), options: None, proto3_optional: None }, FieldDescriptorProto { name: Some("type"), number: Some(2), label: Some(Optional), r#type: Some(Enum), type_name: Some(".PhoneNumber.Type"), extendee: None, default_value: None, oneof_index: None, json_name: Some("type"), options: None, proto3_optional: None }], extension: [], nested_type: [], enum_type: [EnumDescriptorProto { name: Some("Type"), value: [EnumValueDescriptorProto { name: Some("MOBILE"), number: Some(0), options: None }, EnumValueDescriptorProto { name: Some("HOME"), number: Some(1), options: None }, EnumValueDescriptorProto { name: Some("WORK"), number: Some(2), options: None }], options: None, reserved_range: [], reserved_name: [] }], extension_range: [], oneof_decl: [], options: None, reserved_range: [], reserved_name: [] }], enum_type: [], service: [], extension: [], options: Some(FileOptions { java_package: Some("com.example.kafkaprotobuf"), java_outer_classname: None, java_multiple_files: Some(true), java_generate_equals_and_hash: None, java_string_check_utf8: None, optimize_for: None, go_package: None, cc_generic_services: None, java_generic_services: None, py_generic_services: None, php_generic_services: None, deprecated: None, cc_enable_arenas: None, objc_class_prefix: None, csharp_namespace: None, swift_prefix: None, php_class_prefix: None, php_namespace: None, php_metadata_namespace: None, ruby_package: None, uninterpreted_option: [] }), source_code_info: None, syntax: Some("proto3") }, descriptor: DescriptorProto { name: Some("Address"), field: [FieldDescriptorProto { name: Some("city"), number: Some(2), label: Some(Optional), r#type: Some(String), type_name: None, extendee: None, default_value: None, oneof_index: None, json_name: Some("city"), options: None, proto3_optional: None }, FieldDescriptorProto { name: Some("state"), number: Some(3), label: Some(Optional), r#type: Some(String), type_name: None, extendee: None, default_value: None, oneof_index: None, json_name: Some("state"), options: None, proto3_optional: None }, FieldDescriptorProto { name: Some("zip_code"), number: Some(4), label: Some(Optional), r#type: Some(String), type_name: None, extendee: None, default_value: None, oneof_index: None, json_name: Some("zipCode"), options: None, proto3_optional: None }, FieldDescriptorProto { name: Some("indian"), number: Some(5), label: Some(Optional), r#type: Some(Bool), type_name: None, extendee: None, default_value: None, oneof_index: None, json_name: Some("indian"), options: None, proto3_optional: None }], extension: [], nested_type: [], enum_type: [], extension_range: [], oneof_decl: [], options: None, reserved_range: [], reserved_name: [] }, message_name: "Address", fields: {"city": FieldValueInner { values: [MessageFieldValue { name: "city", raw_value: Some("MY CITY"), rtype: String("MY CITY") }], descriptor: FieldDescriptorProto { name: Some("city"), number: Some(2), label: Some(Optional), r#type: Some(String), type_name: None, extendee: None, default_value: None, oneof_index: None, json_name: Some("city"), options: None, proto3_optional: None }, field_type: Normal, proto_type: String }, "indian": FieldValueInner { values: [MessageFieldValue { name: "indian", raw_value: Some("true"), rtype: Boolean(true) }], descriptor: FieldDescriptorProto { name: Some("indian"), number: Some(5), label: Some(Optional), r#type: Some(Bool), type_name: None, extendee: None, default_value: None, oneof_index: None, json_name: Some("indian"), options: None, proto3_optional: None }, field_type: Normal, proto_type: Bool }, "state": FieldValueInner { values: [MessageFieldValue { name: "state", raw_value: Some("TELANGANA"), rtype: String("TELANGANA") }], descriptor: FieldDescriptorProto { name: Some("state"), number: Some(3), label: Some(Optional), r#type: Some(String), type_name: None, extendee: None, default_value: None, oneof_index: None, json_name: Some("state"), options: None, proto3_optional: None }, field_type: Normal, proto_type: String }, "zip_code": FieldValueInner { values: [MessageFieldValue { name: "zip_code", raw_value: Some("500001"), rtype: String("500001") }], descriptor: FieldDescriptorProto { name: Some("zip_code"), number: Some(4), label: Some(Optional), r#type: Some(String), type_name: None, extendee: None, default_value: None, oneof_index: None, json_name: Some("zipCode"), options: None, proto3_optional: None }, field_type: Normal, proto_type: String }} }) }))
2023-11-27T05:49:17.181002Z  INFO tokio-runtime-worker construct_protobuf_interaction_for_message{config={"address": Value { kind: Some(StructValue(Struct { fields: {"city": Value { kind: Some(StringValue("matching(regex, '^[A-Z]*$', 'MY CITY')")) }, "indian": Value { kind: Some(StringValue("matching(boolean, true)")) }, "state": Value { kind: Some(StringValue("matching(regex, '^[A-Z]*$', 'TELANGANA')")) }, "zip_code": Value { kind: Some(StringValue("matching(regex, '^[1-9]{1}[0-9]{5}$', '500001')")) }} })) }, "age": Value { kind: Some(StringValue("matching(integer, 50)")) }, "email": Value { kind: Some(StringValue("matching(equalTo, 'abc@gmail.com')")) }, "grades": Value { kind: Some(StructValue(Struct { fields: {"pact:match": Value { kind: Some(StringValue("eachKey(matching(regex, '^[a-z]*$', 'math')), eachValue(matching(integer, 10))")) }} })) }, "is_student": Value { kind: Some(StringValue("matching(boolean, true)")) }, "name": Value { kind: Some(StringValue("matching(regex, '^[A-Z]*$', 'JOHN')")) }, "pact:message-type": Value { kind: Some(StringValue("Person")) }, "pact:proto": Value { kind: Some(StringValue("/Users/pavanbaloju/Projects/quarkus-kafka-protobuf/src/main/proto/Person.proto")) }, "phone_numbers": Value { kind: Some(StructValue(Struct { fields: {"pact:match": Value { kind: Some(StringValue("eachValue(matching($'phone_number'))")) }, "phone_number": Value { kind: Some(StructValue(Struct { fields: {"number": Value { kind: Some(StringValue("matching(regex, '^[6-9]{1}[0-9]{9}$', '9999888870')")) }, "type": Value { kind: Some(StringValue("matching(type, 'MOBILE')")) }} })) }} })) }} message_name="Person" message_part="" metadata=None}:construct_message_field{path=$.address field_name=address value={"city":"matching(regex, '^[A-Z]*$', 'MY CITY')","indian":"matching(boolean, true)","state":"matching(regex, '^[A-Z]*$', 'TELANGANA')","zip_code":"matching(regex, '^[1-9]{1}[0-9]{5}$', '500001')"}}:build_embedded_message_field_value{path=$.address field="address" value={"city":"matching(regex, '^[A-Z]*$', 'MY CITY')","indian":"matching(boolean, true)","state":"matching(regex, '^[A-Z]*$', 'TELANGANA')","zip_code":"matching(regex, '^[1-9]{1}[0-9]{5}$', '500001')"}}: pact_protobuf_plugin::protobuf: return=Ok(())
2023-11-27T05:49:17.181036Z  INFO tokio-runtime-worker construct_protobuf_interaction_for_message{config={"address": Value { kind: Some(StructValue(Struct { fields: {"city": Value { kind: Some(StringValue("matching(regex, '^[A-Z]*$', 'MY CITY')")) }, "indian": Value { kind: Some(StringValue("matching(boolean, true)")) }, "state": Value { kind: Some(StringValue("matching(regex, '^[A-Z]*$', 'TELANGANA')")) }, "zip_code": Value { kind: Some(StringValue("matching(regex, '^[1-9]{1}[0-9]{5}$', '500001')")) }} })) }, "age": Value { kind: Some(StringValue("matching(integer, 50)")) }, "email": Value { kind: Some(StringValue("matching(equalTo, 'abc@gmail.com')")) }, "grades": Value { kind: Some(StructValue(Struct { fields: {"pact:match": Value { kind: Some(StringValue("eachKey(matching(regex, '^[a-z]*$', 'math')), eachValue(matching(integer, 10))")) }} })) }, "is_student": Value { kind: Some(StringValue("matching(boolean, true)")) }, "name": Value { kind: Some(StringValue("matching(regex, '^[A-Z]*$', 'JOHN')")) }, "pact:message-type": Value { kind: Some(StringValue("Person")) }, "pact:proto": Value { kind: Some(StringValue("/Users/pavanbaloju/Projects/quarkus-kafka-protobuf/src/main/proto/Person.proto")) }, "phone_numbers": Value { kind: Some(StructValue(Struct { fields: {"pact:match": Value { kind: Some(StringValue("eachValue(matching($'phone_number'))")) }, "phone_number": Value { kind: Some(StructValue(Struct { fields: {"number": Value { kind: Some(StringValue("matching(regex, '^[6-9]{1}[0-9]{9}$', '9999888870')")) }, "type": Value { kind: Some(StringValue("matching(type, 'MOBILE')")) }} })) }} })) }} message_name="Person" message_part="" metadata=None}:construct_message_field{path=$.address field_name=address value={"city":"matching(regex, '^[A-Z]*$', 'MY CITY')","indian":"matching(boolean, true)","state":"matching(regex, '^[A-Z]*$', 'TELANGANA')","zip_code":"matching(regex, '^[1-9]{1}[0-9]{5}$', '500001')"}}: pact_protobuf_plugin::protobuf: return=Ok(())
2023-11-27T05:49:17.181110Z  INFO tokio-runtime-worker construct_protobuf_interaction_for_message{config={"address": Value { kind: Some(StructValue(Struct { fields: {"city": Value { kind: Some(StringValue("matching(regex, '^[A-Z]*$', 'MY CITY')")) }, "indian": Value { kind: Some(StringValue("matching(boolean, true)")) }, "state": Value { kind: Some(StringValue("matching(regex, '^[A-Z]*$', 'TELANGANA')")) }, "zip_code": Value { kind: Some(StringValue("matching(regex, '^[1-9]{1}[0-9]{5}$', '500001')")) }} })) }, "age": Value { kind: Some(StringValue("matching(integer, 50)")) }, "email": Value { kind: Some(StringValue("matching(equalTo, 'abc@gmail.com')")) }, "grades": Value { kind: Some(StructValue(Struct { fields: {"pact:match": Value { kind: Some(StringValue("eachKey(matching(regex, '^[a-z]*$', 'math')), eachValue(matching(integer, 10))")) }} })) }, "is_student": Value { kind: Some(StringValue("matching(boolean, true)")) }, "name": Value { kind: Some(StringValue("matching(regex, '^[A-Z]*$', 'JOHN')")) }, "pact:message-type": Value { kind: Some(StringValue("Person")) }, "pact:proto": Value { kind: Some(StringValue("/Users/pavanbaloju/Projects/quarkus-kafka-protobuf/src/main/proto/Person.proto")) }, "phone_numbers": Value { kind: Some(StructValue(Struct { fields: {"pact:match": Value { kind: Some(StringValue("eachValue(matching($'phone_number'))")) }, "phone_number": Value { kind: Some(StructValue(Struct { fields: {"number": Value { kind: Some(StringValue("matching(regex, '^[6-9]{1}[0-9]{9}$', '9999888870')")) }, "type": Value { kind: Some(StringValue("matching(type, 'MOBILE')")) }} })) }} })) }} message_name="Person" message_part="" metadata=None}:construct_message_field{path=$.age field_name=age value="matching(integer, 50)"}:build_field_value{path=$.age field_type=Normal field_name=age value="matching(integer, 50)"}: pact_protobuf_plugin::protobuf: return=Ok(Some(MessageFieldValue { name: "age", raw_value: Some("50"), rtype: Integer32(50) }))
2023-11-27T05:49:17.181146Z  INFO tokio-runtime-worker construct_protobuf_interaction_for_message{config={"address": Value { kind: Some(StructValue(Struct { fields: {"city": Value { kind: Some(StringValue("matching(regex, '^[A-Z]*$', 'MY CITY')")) }, "indian": Value { kind: Some(StringValue("matching(boolean, true)")) }, "state": Value { kind: Some(StringValue("matching(regex, '^[A-Z]*$', 'TELANGANA')")) }, "zip_code": Value { kind: Some(StringValue("matching(regex, '^[1-9]{1}[0-9]{5}$', '500001')")) }} })) }, "age": Value { kind: Some(StringValue("matching(integer, 50)")) }, "email": Value { kind: Some(StringValue("matching(equalTo, 'abc@gmail.com')")) }, "grades": Value { kind: Some(StructValue(Struct { fields: {"pact:match": Value { kind: Some(StringValue("eachKey(matching(regex, '^[a-z]*$', 'math')), eachValue(matching(integer, 10))")) }} })) }, "is_student": Value { kind: Some(StringValue("matching(boolean, true)")) }, "name": Value { kind: Some(StringValue("matching(regex, '^[A-Z]*$', 'JOHN')")) }, "pact:message-type": Value { kind: Some(StringValue("Person")) }, "pact:proto": Value { kind: Some(StringValue("/Users/pavanbaloju/Projects/quarkus-kafka-protobuf/src/main/proto/Person.proto")) }, "phone_numbers": Value { kind: Some(StructValue(Struct { fields: {"pact:match": Value { kind: Some(StringValue("eachValue(matching($'phone_number'))")) }, "phone_number": Value { kind: Some(StructValue(Struct { fields: {"number": Value { kind: Some(StringValue("matching(regex, '^[6-9]{1}[0-9]{9}$', '9999888870')")) }, "type": Value { kind: Some(StringValue("matching(type, 'MOBILE')")) }} })) }} })) }} message_name="Person" message_part="" metadata=None}:construct_message_field{path=$.age field_name=age value="matching(integer, 50)"}: pact_protobuf_plugin::protobuf: return=Ok(())
2023-11-27T05:49:17.181212Z  INFO tokio-runtime-worker construct_protobuf_interaction_for_message{config={"address": Value { kind: Some(StructValue(Struct { fields: {"city": Value { kind: Some(StringValue("matching(regex, '^[A-Z]*$', 'MY CITY')")) }, "indian": Value { kind: Some(StringValue("matching(boolean, true)")) }, "state": Value { kind: Some(StringValue("matching(regex, '^[A-Z]*$', 'TELANGANA')")) }, "zip_code": Value { kind: Some(StringValue("matching(regex, '^[1-9]{1}[0-9]{5}$', '500001')")) }} })) }, "age": Value { kind: Some(StringValue("matching(integer, 50)")) }, "email": Value { kind: Some(StringValue("matching(equalTo, 'abc@gmail.com')")) }, "grades": Value { kind: Some(StructValue(Struct { fields: {"pact:match": Value { kind: Some(StringValue("eachKey(matching(regex, '^[a-z]*$', 'math')), eachValue(matching(integer, 10))")) }} })) }, "is_student": Value { kind: Some(StringValue("matching(boolean, true)")) }, "name": Value { kind: Some(StringValue("matching(regex, '^[A-Z]*$', 'JOHN')")) }, "pact:message-type": Value { kind: Some(StringValue("Person")) }, "pact:proto": Value { kind: Some(StringValue("/Users/pavanbaloju/Projects/quarkus-kafka-protobuf/src/main/proto/Person.proto")) }, "phone_numbers": Value { kind: Some(StructValue(Struct { fields: {"pact:match": Value { kind: Some(StringValue("eachValue(matching($'phone_number'))")) }, "phone_number": Value { kind: Some(StructValue(Struct { fields: {"number": Value { kind: Some(StringValue("matching(regex, '^[6-9]{1}[0-9]{9}$', '9999888870')")) }, "type": Value { kind: Some(StringValue("matching(type, 'MOBILE')")) }} })) }} })) }} message_name="Person" message_part="" metadata=None}:construct_message_field{path=$.email field_name=email value="matching(equalTo, 'abc@gmail.com')"}:build_field_value{path=$.email field_type=Normal field_name=email value="matching(equalTo, 'abc@gmail.com')"}: pact_protobuf_plugin::protobuf: return=Ok(Some(MessageFieldValue { name: "email", raw_value: Some("abc@gmail.com"), rtype: String("abc@gmail.com") }))
2023-11-27T05:49:17.181255Z  INFO tokio-runtime-worker construct_protobuf_interaction_for_message{config={"address": Value { kind: Some(StructValue(Struct { fields: {"city": Value { kind: Some(StringValue("matching(regex, '^[A-Z]*$', 'MY CITY')")) }, "indian": Value { kind: Some(StringValue("matching(boolean, true)")) }, "state": Value { kind: Some(StringValue("matching(regex, '^[A-Z]*$', 'TELANGANA')")) }, "zip_code": Value { kind: Some(StringValue("matching(regex, '^[1-9]{1}[0-9]{5}$', '500001')")) }} })) }, "age": Value { kind: Some(StringValue("matching(integer, 50)")) }, "email": Value { kind: Some(StringValue("matching(equalTo, 'abc@gmail.com')")) }, "grades": Value { kind: Some(StructValue(Struct { fields: {"pact:match": Value { kind: Some(StringValue("eachKey(matching(regex, '^[a-z]*$', 'math')), eachValue(matching(integer, 10))")) }} })) }, "is_student": Value { kind: Some(StringValue("matching(boolean, true)")) }, "name": Value { kind: Some(StringValue("matching(regex, '^[A-Z]*$', 'JOHN')")) }, "pact:message-type": Value { kind: Some(StringValue("Person")) }, "pact:proto": Value { kind: Some(StringValue("/Users/pavanbaloju/Projects/quarkus-kafka-protobuf/src/main/proto/Person.proto")) }, "phone_numbers": Value { kind: Some(StructValue(Struct { fields: {"pact:match": Value { kind: Some(StringValue("eachValue(matching($'phone_number'))")) }, "phone_number": Value { kind: Some(StructValue(Struct { fields: {"number": Value { kind: Some(StringValue("matching(regex, '^[6-9]{1}[0-9]{9}$', '9999888870')")) }, "type": Value { kind: Some(StringValue("matching(type, 'MOBILE')")) }} })) }} })) }} message_name="Person" message_part="" metadata=None}:construct_message_field{path=$.email field_name=email value="matching(equalTo, 'abc@gmail.com')"}: pact_protobuf_plugin::protobuf: return=Ok(())
2023-11-27T05:49:17.181395Z  INFO tokio-runtime-worker construct_protobuf_interaction_for_message{config={"address": Value { kind: Some(StructValue(Struct { fields: {"city": Value { kind: Some(StringValue("matching(regex, '^[A-Z]*$', 'MY CITY')")) }, "indian": Value { kind: Some(StringValue("matching(boolean, true)")) }, "state": Value { kind: Some(StringValue("matching(regex, '^[A-Z]*$', 'TELANGANA')")) }, "zip_code": Value { kind: Some(StringValue("matching(regex, '^[1-9]{1}[0-9]{5}$', '500001')")) }} })) }, "age": Value { kind: Some(StringValue("matching(integer, 50)")) }, "email": Value { kind: Some(StringValue("matching(equalTo, 'abc@gmail.com')")) }, "grades": Value { kind: Some(StructValue(Struct { fields: {"pact:match": Value { kind: Some(StringValue("eachKey(matching(regex, '^[a-z]*$', 'math')), eachValue(matching(integer, 10))")) }} })) }, "is_student": Value { kind: Some(StringValue("matching(boolean, true)")) }, "name": Value { kind: Some(StringValue("matching(regex, '^[A-Z]*$', 'JOHN')")) }, "pact:message-type": Value { kind: Some(StringValue("Person")) }, "pact:proto": Value { kind: Some(StringValue("/Users/pavanbaloju/Projects/quarkus-kafka-protobuf/src/main/proto/Person.proto")) }, "phone_numbers": Value { kind: Some(StructValue(Struct { fields: {"pact:match": Value { kind: Some(StringValue("eachValue(matching($'phone_number'))")) }, "phone_number": Value { kind: Some(StructValue(Struct { fields: {"number": Value { kind: Some(StringValue("matching(regex, '^[6-9]{1}[0-9]{9}$', '9999888870')")) }, "type": Value { kind: Some(StringValue("matching(type, 'MOBILE')")) }} })) }} })) }} message_name="Person" message_part="" metadata=None}:construct_message_field{path=$.grades field_name=grades value={"pact:match":"eachKey(matching(regex, '^[a-z]*$', 'math')), eachValue(matching(integer, 10))"}}:build_embedded_message_field_value{path=$.grades field="grades" value={"pact:match":"eachKey(matching(regex, '^[a-z]*$', 'math')), eachValue(matching(integer, 10))"}}:build_single_embedded_field_value{path=$.grades field_type=Normal field=grades value={"pact:match":"eachKey(matching(regex, '^[a-z]*$', 'math')), eachValue(matching(integer, 10))"}}: pact_protobuf_plugin::protobuf: return=Ok(None)
2023-11-27T05:49:17.181432Z  INFO tokio-runtime-worker construct_protobuf_interaction_for_message{config={"address": Value { kind: Some(StructValue(Struct { fields: {"city": Value { kind: Some(StringValue("matching(regex, '^[A-Z]*$', 'MY CITY')")) }, "indian": Value { kind: Some(StringValue("matching(boolean, true)")) }, "state": Value { kind: Some(StringValue("matching(regex, '^[A-Z]*$', 'TELANGANA')")) }, "zip_code": Value { kind: Some(StringValue("matching(regex, '^[1-9]{1}[0-9]{5}$', '500001')")) }} })) }, "age": Value { kind: Some(StringValue("matching(integer, 50)")) }, "email": Value { kind: Some(StringValue("matching(equalTo, 'abc@gmail.com')")) }, "grades": Value { kind: Some(StructValue(Struct { fields: {"pact:match": Value { kind: Some(StringValue("eachKey(matching(regex, '^[a-z]*$', 'math')), eachValue(matching(integer, 10))")) }} })) }, "is_student": Value { kind: Some(StringValue("matching(boolean, true)")) }, "name": Value { kind: Some(StringValue("matching(regex, '^[A-Z]*$', 'JOHN')")) }, "pact:message-type": Value { kind: Some(StringValue("Person")) }, "pact:proto": Value { kind: Some(StringValue("/Users/pavanbaloju/Projects/quarkus-kafka-protobuf/src/main/proto/Person.proto")) }, "phone_numbers": Value { kind: Some(StructValue(Struct { fields: {"pact:match": Value { kind: Some(StringValue("eachValue(matching($'phone_number'))")) }, "phone_number": Value { kind: Some(StructValue(Struct { fields: {"number": Value { kind: Some(StringValue("matching(regex, '^[6-9]{1}[0-9]{9}$', '9999888870')")) }, "type": Value { kind: Some(StringValue("matching(type, 'MOBILE')")) }} })) }} })) }} message_name="Person" message_part="" metadata=None}:construct_message_field{path=$.grades field_name=grades value={"pact:match":"eachKey(matching(regex, '^[a-z]*$', 'math')), eachValue(matching(integer, 10))"}}:build_embedded_message_field_value{path=$.grades field="grades" value={"pact:match":"eachKey(matching(regex, '^[a-z]*$', 'math')), eachValue(matching(integer, 10))"}}: pact_protobuf_plugin::protobuf: return=Ok(())
2023-11-27T05:49:17.181461Z  INFO tokio-runtime-worker construct_protobuf_interaction_for_message{config={"address": Value { kind: Some(StructValue(Struct { fields: {"city": Value { kind: Some(StringValue("matching(regex, '^[A-Z]*$', 'MY CITY')")) }, "indian": Value { kind: Some(StringValue("matching(boolean, true)")) }, "state": Value { kind: Some(StringValue("matching(regex, '^[A-Z]*$', 'TELANGANA')")) }, "zip_code": Value { kind: Some(StringValue("matching(regex, '^[1-9]{1}[0-9]{5}$', '500001')")) }} })) }, "age": Value { kind: Some(StringValue("matching(integer, 50)")) }, "email": Value { kind: Some(StringValue("matching(equalTo, 'abc@gmail.com')")) }, "grades": Value { kind: Some(StructValue(Struct { fields: {"pact:match": Value { kind: Some(StringValue("eachKey(matching(regex, '^[a-z]*$', 'math')), eachValue(matching(integer, 10))")) }} })) }, "is_student": Value { kind: Some(StringValue("matching(boolean, true)")) }, "name": Value { kind: Some(StringValue("matching(regex, '^[A-Z]*$', 'JOHN')")) }, "pact:message-type": Value { kind: Some(StringValue("Person")) }, "pact:proto": Value { kind: Some(StringValue("/Users/pavanbaloju/Projects/quarkus-kafka-protobuf/src/main/proto/Person.proto")) }, "phone_numbers": Value { kind: Some(StructValue(Struct { fields: {"pact:match": Value { kind: Some(StringValue("eachValue(matching($'phone_number'))")) }, "phone_number": Value { kind: Some(StructValue(Struct { fields: {"number": Value { kind: Some(StringValue("matching(regex, '^[6-9]{1}[0-9]{9}$', '9999888870')")) }, "type": Value { kind: Some(StringValue("matching(type, 'MOBILE')")) }} })) }} })) }} message_name="Person" message_part="" metadata=None}:construct_message_field{path=$.grades field_name=grades value={"pact:match":"eachKey(matching(regex, '^[a-z]*$', 'math')), eachValue(matching(integer, 10))"}}: pact_protobuf_plugin::protobuf: return=Ok(())
2023-11-27T05:49:17.181528Z  INFO tokio-runtime-worker construct_protobuf_interaction_for_message{config={"address": Value { kind: Some(StructValue(Struct { fields: {"city": Value { kind: Some(StringValue("matching(regex, '^[A-Z]*$', 'MY CITY')")) }, "indian": Value { kind: Some(StringValue("matching(boolean, true)")) }, "state": Value { kind: Some(StringValue("matching(regex, '^[A-Z]*$', 'TELANGANA')")) }, "zip_code": Value { kind: Some(StringValue("matching(regex, '^[1-9]{1}[0-9]{5}$', '500001')")) }} })) }, "age": Value { kind: Some(StringValue("matching(integer, 50)")) }, "email": Value { kind: Some(StringValue("matching(equalTo, 'abc@gmail.com')")) }, "grades": Value { kind: Some(StructValue(Struct { fields: {"pact:match": Value { kind: Some(StringValue("eachKey(matching(regex, '^[a-z]*$', 'math')), eachValue(matching(integer, 10))")) }} })) }, "is_student": Value { kind: Some(StringValue("matching(boolean, true)")) }, "name": Value { kind: Some(StringValue("matching(regex, '^[A-Z]*$', 'JOHN')")) }, "pact:message-type": Value { kind: Some(StringValue("Person")) }, "pact:proto": Value { kind: Some(StringValue("/Users/pavanbaloju/Projects/quarkus-kafka-protobuf/src/main/proto/Person.proto")) }, "phone_numbers": Value { kind: Some(StructValue(Struct { fields: {"pact:match": Value { kind: Some(StringValue("eachValue(matching($'phone_number'))")) }, "phone_number": Value { kind: Some(StructValue(Struct { fields: {"number": Value { kind: Some(StringValue("matching(regex, '^[6-9]{1}[0-9]{9}$', '9999888870')")) }, "type": Value { kind: Some(StringValue("matching(type, 'MOBILE')")) }} })) }} })) }} message_name="Person" message_part="" metadata=None}:construct_message_field{path=$.is_student field_name=is_student value="matching(boolean, true)"}:build_field_value{path=$.is_student field_type=Normal field_name=is_student value="matching(boolean, true)"}: pact_protobuf_plugin::protobuf: return=Ok(Some(MessageFieldValue { name: "is_student", raw_value: Some("true"), rtype: Boolean(true) }))
2023-11-27T05:49:17.181567Z  INFO tokio-runtime-worker construct_protobuf_interaction_for_message{config={"address": Value { kind: Some(StructValue(Struct { fields: {"city": Value { kind: Some(StringValue("matching(regex, '^[A-Z]*$', 'MY CITY')")) }, "indian": Value { kind: Some(StringValue("matching(boolean, true)")) }, "state": Value { kind: Some(StringValue("matching(regex, '^[A-Z]*$', 'TELANGANA')")) }, "zip_code": Value { kind: Some(StringValue("matching(regex, '^[1-9]{1}[0-9]{5}$', '500001')")) }} })) }, "age": Value { kind: Some(StringValue("matching(integer, 50)")) }, "email": Value { kind: Some(StringValue("matching(equalTo, 'abc@gmail.com')")) }, "grades": Value { kind: Some(StructValue(Struct { fields: {"pact:match": Value { kind: Some(StringValue("eachKey(matching(regex, '^[a-z]*$', 'math')), eachValue(matching(integer, 10))")) }} })) }, "is_student": Value { kind: Some(StringValue("matching(boolean, true)")) }, "name": Value { kind: Some(StringValue("matching(regex, '^[A-Z]*$', 'JOHN')")) }, "pact:message-type": Value { kind: Some(StringValue("Person")) }, "pact:proto": Value { kind: Some(StringValue("/Users/pavanbaloju/Projects/quarkus-kafka-protobuf/src/main/proto/Person.proto")) }, "phone_numbers": Value { kind: Some(StructValue(Struct { fields: {"pact:match": Value { kind: Some(StringValue("eachValue(matching($'phone_number'))")) }, "phone_number": Value { kind: Some(StructValue(Struct { fields: {"number": Value { kind: Some(StringValue("matching(regex, '^[6-9]{1}[0-9]{9}$', '9999888870')")) }, "type": Value { kind: Some(StringValue("matching(type, 'MOBILE')")) }} })) }} })) }} message_name="Person" message_part="" metadata=None}:construct_message_field{path=$.is_student field_name=is_student value="matching(boolean, true)"}: pact_protobuf_plugin::protobuf: return=Ok(())
2023-11-27T05:49:17.181631Z  INFO tokio-runtime-worker construct_protobuf_interaction_for_message{config={"address": Value { kind: Some(StructValue(Struct { fields: {"city": Value { kind: Some(StringValue("matching(regex, '^[A-Z]*$', 'MY CITY')")) }, "indian": Value { kind: Some(StringValue("matching(boolean, true)")) }, "state": Value { kind: Some(StringValue("matching(regex, '^[A-Z]*$', 'TELANGANA')")) }, "zip_code": Value { kind: Some(StringValue("matching(regex, '^[1-9]{1}[0-9]{5}$', '500001')")) }} })) }, "age": Value { kind: Some(StringValue("matching(integer, 50)")) }, "email": Value { kind: Some(StringValue("matching(equalTo, 'abc@gmail.com')")) }, "grades": Value { kind: Some(StructValue(Struct { fields: {"pact:match": Value { kind: Some(StringValue("eachKey(matching(regex, '^[a-z]*$', 'math')), eachValue(matching(integer, 10))")) }} })) }, "is_student": Value { kind: Some(StringValue("matching(boolean, true)")) }, "name": Value { kind: Some(StringValue("matching(regex, '^[A-Z]*$', 'JOHN')")) }, "pact:message-type": Value { kind: Some(StringValue("Person")) }, "pact:proto": Value { kind: Some(StringValue("/Users/pavanbaloju/Projects/quarkus-kafka-protobuf/src/main/proto/Person.proto")) }, "phone_numbers": Value { kind: Some(StructValue(Struct { fields: {"pact:match": Value { kind: Some(StringValue("eachValue(matching($'phone_number'))")) }, "phone_number": Value { kind: Some(StructValue(Struct { fields: {"number": Value { kind: Some(StringValue("matching(regex, '^[6-9]{1}[0-9]{9}$', '9999888870')")) }, "type": Value { kind: Some(StringValue("matching(type, 'MOBILE')")) }} })) }} })) }} message_name="Person" message_part="" metadata=None}:construct_message_field{path=$.name field_name=name value="matching(regex, '^[A-Z]*$', 'JOHN')"}:build_field_value{path=$.name field_type=Normal field_name=name value="matching(regex, '^[A-Z]*$', 'JOHN')"}: pact_protobuf_plugin::protobuf: return=Ok(Some(MessageFieldValue { name: "name", raw_value: Some("JOHN"), rtype: String("JOHN") }))
2023-11-27T05:49:17.181666Z  INFO tokio-runtime-worker construct_protobuf_interaction_for_message{config={"address": Value { kind: Some(StructValue(Struct { fields: {"city": Value { kind: Some(StringValue("matching(regex, '^[A-Z]*$', 'MY CITY')")) }, "indian": Value { kind: Some(StringValue("matching(boolean, true)")) }, "state": Value { kind: Some(StringValue("matching(regex, '^[A-Z]*$', 'TELANGANA')")) }, "zip_code": Value { kind: Some(StringValue("matching(regex, '^[1-9]{1}[0-9]{5}$', '500001')")) }} })) }, "age": Value { kind: Some(StringValue("matching(integer, 50)")) }, "email": Value { kind: Some(StringValue("matching(equalTo, 'abc@gmail.com')")) }, "grades": Value { kind: Some(StructValue(Struct { fields: {"pact:match": Value { kind: Some(StringValue("eachKey(matching(regex, '^[a-z]*$', 'math')), eachValue(matching(integer, 10))")) }} })) }, "is_student": Value { kind: Some(StringValue("matching(boolean, true)")) }, "name": Value { kind: Some(StringValue("matching(regex, '^[A-Z]*$', 'JOHN')")) }, "pact:message-type": Value { kind: Some(StringValue("Person")) }, "pact:proto": Value { kind: Some(StringValue("/Users/pavanbaloju/Projects/quarkus-kafka-protobuf/src/main/proto/Person.proto")) }, "phone_numbers": Value { kind: Some(StructValue(Struct { fields: {"pact:match": Value { kind: Some(StringValue("eachValue(matching($'phone_number'))")) }, "phone_number": Value { kind: Some(StructValue(Struct { fields: {"number": Value { kind: Some(StringValue("matching(regex, '^[6-9]{1}[0-9]{9}$', '9999888870')")) }, "type": Value { kind: Some(StringValue("matching(type, 'MOBILE')")) }} })) }} })) }} message_name="Person" message_part="" metadata=None}:construct_message_field{path=$.name field_name=name value="matching(regex, '^[A-Z]*$', 'JOHN')"}: pact_protobuf_plugin::protobuf: return=Ok(())
2023-11-27T05:49:17.181829Z  INFO tokio-runtime-worker construct_protobuf_interaction_for_message{config={"address": Value { kind: Some(StructValue(Struct { fields: {"city": Value { kind: Some(StringValue("matching(regex, '^[A-Z]*$', 'MY CITY')")) }, "indian": Value { kind: Some(StringValue("matching(boolean, true)")) }, "state": Value { kind: Some(StringValue("matching(regex, '^[A-Z]*$', 'TELANGANA')")) }, "zip_code": Value { kind: Some(StringValue("matching(regex, '^[1-9]{1}[0-9]{5}$', '500001')")) }} })) }, "age": Value { kind: Some(StringValue("matching(integer, 50)")) }, "email": Value { kind: Some(StringValue("matching(equalTo, 'abc@gmail.com')")) }, "grades": Value { kind: Some(StructValue(Struct { fields: {"pact:match": Value { kind: Some(StringValue("eachKey(matching(regex, '^[a-z]*$', 'math')), eachValue(matching(integer, 10))")) }} })) }, "is_student": Value { kind: Some(StringValue("matching(boolean, true)")) }, "name": Value { kind: Some(StringValue("matching(regex, '^[A-Z]*$', 'JOHN')")) }, "pact:message-type": Value { kind: Some(StringValue("Person")) }, "pact:proto": Value { kind: Some(StringValue("/Users/pavanbaloju/Projects/quarkus-kafka-protobuf/src/main/proto/Person.proto")) }, "phone_numbers": Value { kind: Some(StructValue(Struct { fields: {"pact:match": Value { kind: Some(StringValue("eachValue(matching($'phone_number'))")) }, "phone_number": Value { kind: Some(StructValue(Struct { fields: {"number": Value { kind: Some(StringValue("matching(regex, '^[6-9]{1}[0-9]{9}$', '9999888870')")) }, "type": Value { kind: Some(StringValue("matching(type, 'MOBILE')")) }} })) }} })) }} message_name="Person" message_part="" metadata=None}:construct_message_field{path=$.phone_numbers field_name=phone_numbers value={"pact:match":"eachValue(matching($'phone_number'))","phone_number":{"number":"matching(regex, '^[6-9]{1}[0-9]{9}$', '9999888870')","type":"matching(type, 'MOBILE')"}}}:build_embedded_message_field_value{path=$.phone_numbers field="phone_numbers" value={"pact:match":"eachValue(matching($'phone_number'))","phone_number":{"number":"matching(regex, '^[6-9]{1}[0-9]{9}$', '9999888870')","type":"matching(type, 'MOBILE')"}}}:build_single_embedded_field_value{path=$.phone_numbers.* field_type=Repeated field=phone_numbers value={"number":"matching(regex, '^[6-9]{1}[0-9]{9}$', '9999888870')","type":"matching(type, 'MOBILE')"}}:construct_message_field{path=$.phone_numbers.*.number field_name=number value="matching(regex, '^[6-9]{1}[0-9]{9}$', '9999888870')"}:build_field_value{path=$.phone_numbers.*.number field_type=Normal field_name=number value="matching(regex, '^[6-9]{1}[0-9]{9}$', '9999888870')"}: pact_protobuf_plugin::protobuf: return=Ok(Some(MessageFieldValue { name: "number", raw_value: Some("9999888870"), rtype: String("9999888870") }))
2023-11-27T05:49:17.181864Z  INFO tokio-runtime-worker construct_protobuf_interaction_for_message{config={"address": Value { kind: Some(StructValue(Struct { fields: {"city": Value { kind: Some(StringValue("matching(regex, '^[A-Z]*$', 'MY CITY')")) }, "indian": Value { kind: Some(StringValue("matching(boolean, true)")) }, "state": Value { kind: Some(StringValue("matching(regex, '^[A-Z]*$', 'TELANGANA')")) }, "zip_code": Value { kind: Some(StringValue("matching(regex, '^[1-9]{1}[0-9]{5}$', '500001')")) }} })) }, "age": Value { kind: Some(StringValue("matching(integer, 50)")) }, "email": Value { kind: Some(StringValue("matching(equalTo, 'abc@gmail.com')")) }, "grades": Value { kind: Some(StructValue(Struct { fields: {"pact:match": Value { kind: Some(StringValue("eachKey(matching(regex, '^[a-z]*$', 'math')), eachValue(matching(integer, 10))")) }} })) }, "is_student": Value { kind: Some(StringValue("matching(boolean, true)")) }, "name": Value { kind: Some(StringValue("matching(regex, '^[A-Z]*$', 'JOHN')")) }, "pact:message-type": Value { kind: Some(StringValue("Person")) }, "pact:proto": Value { kind: Some(StringValue("/Users/pavanbaloju/Projects/quarkus-kafka-protobuf/src/main/proto/Person.proto")) }, "phone_numbers": Value { kind: Some(StructValue(Struct { fields: {"pact:match": Value { kind: Some(StringValue("eachValue(matching($'phone_number'))")) }, "phone_number": Value { kind: Some(StructValue(Struct { fields: {"number": Value { kind: Some(StringValue("matching(regex, '^[6-9]{1}[0-9]{9}$', '9999888870')")) }, "type": Value { kind: Some(StringValue("matching(type, 'MOBILE')")) }} })) }} })) }} message_name="Person" message_part="" metadata=None}:construct_message_field{path=$.phone_numbers field_name=phone_numbers value={"pact:match":"eachValue(matching($'phone_number'))","phone_number":{"number":"matching(regex, '^[6-9]{1}[0-9]{9}$', '9999888870')","type":"matching(type, 'MOBILE')"}}}:build_embedded_message_field_value{path=$.phone_numbers field="phone_numbers" value={"pact:match":"eachValue(matching($'phone_number'))","phone_number":{"number":"matching(regex, '^[6-9]{1}[0-9]{9}$', '9999888870')","type":"matching(type, 'MOBILE')"}}}:build_single_embedded_field_value{path=$.phone_numbers.* field_type=Repeated field=phone_numbers value={"number":"matching(regex, '^[6-9]{1}[0-9]{9}$', '9999888870')","type":"matching(type, 'MOBILE')"}}:construct_message_field{path=$.phone_numbers.*.number field_name=number value="matching(regex, '^[6-9]{1}[0-9]{9}$', '9999888870')"}: pact_protobuf_plugin::protobuf: return=Ok(())
2023-11-27T05:49:17.181947Z  INFO tokio-runtime-worker construct_protobuf_interaction_for_message{config={"address": Value { kind: Some(StructValue(Struct { fields: {"city": Value { kind: Some(StringValue("matching(regex, '^[A-Z]*$', 'MY CITY')")) }, "indian": Value { kind: Some(StringValue("matching(boolean, true)")) }, "state": Value { kind: Some(StringValue("matching(regex, '^[A-Z]*$', 'TELANGANA')")) }, "zip_code": Value { kind: Some(StringValue("matching(regex, '^[1-9]{1}[0-9]{5}$', '500001')")) }} })) }, "age": Value { kind: Some(StringValue("matching(integer, 50)")) }, "email": Value { kind: Some(StringValue("matching(equalTo, 'abc@gmail.com')")) }, "grades": Value { kind: Some(StructValue(Struct { fields: {"pact:match": Value { kind: Some(StringValue("eachKey(matching(regex, '^[a-z]*$', 'math')), eachValue(matching(integer, 10))")) }} })) }, "is_student": Value { kind: Some(StringValue("matching(boolean, true)")) }, "name": Value { kind: Some(StringValue("matching(regex, '^[A-Z]*$', 'JOHN')")) }, "pact:message-type": Value { kind: Some(StringValue("Person")) }, "pact:proto": Value { kind: Some(StringValue("/Users/pavanbaloju/Projects/quarkus-kafka-protobuf/src/main/proto/Person.proto")) }, "phone_numbers": Value { kind: Some(StructValue(Struct { fields: {"pact:match": Value { kind: Some(StringValue("eachValue(matching($'phone_number'))")) }, "phone_number": Value { kind: Some(StructValue(Struct { fields: {"number": Value { kind: Some(StringValue("matching(regex, '^[6-9]{1}[0-9]{9}$', '9999888870')")) }, "type": Value { kind: Some(StringValue("matching(type, 'MOBILE')")) }} })) }} })) }} message_name="Person" message_part="" metadata=None}:construct_message_field{path=$.phone_numbers field_name=phone_numbers value={"pact:match":"eachValue(matching($'phone_number'))","phone_number":{"number":"matching(regex, '^[6-9]{1}[0-9]{9}$', '9999888870')","type":"matching(type, 'MOBILE')"}}}:build_embedded_message_field_value{path=$.phone_numbers field="phone_numbers" value={"pact:match":"eachValue(matching($'phone_number'))","phone_number":{"number":"matching(regex, '^[6-9]{1}[0-9]{9}$', '9999888870')","type":"matching(type, 'MOBILE')"}}}:build_single_embedded_field_value{path=$.phone_numbers.* field_type=Repeated field=phone_numbers value={"number":"matching(regex, '^[6-9]{1}[0-9]{9}$', '9999888870')","type":"matching(type, 'MOBILE')"}}:construct_message_field{path=$.phone_numbers.*.type field_name=type value="matching(type, 'MOBILE')"}:build_field_value{path=$.phone_numbers.*.type field_type=Normal field_name=type value="matching(type, 'MOBILE')"}:find_enum_value_by_name_in_message{enum_name=.PhoneNumber.Type enum_value=MOBILE}: pact_protobuf_plugin::utils: return=Some((0, EnumDescriptorProto { name: Some("Type"), value: [EnumValueDescriptorProto { name: Some("MOBILE"), number: Some(0), options: None }, EnumValueDescriptorProto { name: Some("HOME"), number: Some(1), options: None }, EnumValueDescriptorProto { name: Some("WORK"), number: Some(2), options: None }], options: None, reserved_range: [], reserved_name: [] }))
2023-11-27T05:49:17.182002Z  INFO tokio-runtime-worker construct_protobuf_interaction_for_message{config={"address": Value { kind: Some(StructValue(Struct { fields: {"city": Value { kind: Some(StringValue("matching(regex, '^[A-Z]*$', 'MY CITY')")) }, "indian": Value { kind: Some(StringValue("matching(boolean, true)")) }, "state": Value { kind: Some(StringValue("matching(regex, '^[A-Z]*$', 'TELANGANA')")) }, "zip_code": Value { kind: Some(StringValue("matching(regex, '^[1-9]{1}[0-9]{5}$', '500001')")) }} })) }, "age": Value { kind: Some(StringValue("matching(integer, 50)")) }, "email": Value { kind: Some(StringValue("matching(equalTo, 'abc@gmail.com')")) }, "grades": Value { kind: Some(StructValue(Struct { fields: {"pact:match": Value { kind: Some(StringValue("eachKey(matching(regex, '^[a-z]*$', 'math')), eachValue(matching(integer, 10))")) }} })) }, "is_student": Value { kind: Some(StringValue("matching(boolean, true)")) }, "name": Value { kind: Some(StringValue("matching(regex, '^[A-Z]*$', 'JOHN')")) }, "pact:message-type": Value { kind: Some(StringValue("Person")) }, "pact:proto": Value { kind: Some(StringValue("/Users/pavanbaloju/Projects/quarkus-kafka-protobuf/src/main/proto/Person.proto")) }, "phone_numbers": Value { kind: Some(StructValue(Struct { fields: {"pact:match": Value { kind: Some(StringValue("eachValue(matching($'phone_number'))")) }, "phone_number": Value { kind: Some(StructValue(Struct { fields: {"number": Value { kind: Some(StringValue("matching(regex, '^[6-9]{1}[0-9]{9}$', '9999888870')")) }, "type": Value { kind: Some(StringValue("matching(type, 'MOBILE')")) }} })) }} })) }} message_name="Person" message_part="" metadata=None}:construct_message_field{path=$.phone_numbers field_name=phone_numbers value={"pact:match":"eachValue(matching($'phone_number'))","phone_number":{"number":"matching(regex, '^[6-9]{1}[0-9]{9}$', '9999888870')","type":"matching(type, 'MOBILE')"}}}:build_embedded_message_field_value{path=$.phone_numbers field="phone_numbers" value={"pact:match":"eachValue(matching($'phone_number'))","phone_number":{"number":"matching(regex, '^[6-9]{1}[0-9]{9}$', '9999888870')","type":"matching(type, 'MOBILE')"}}}:build_single_embedded_field_value{path=$.phone_numbers.* field_type=Repeated field=phone_numbers value={"number":"matching(regex, '^[6-9]{1}[0-9]{9}$', '9999888870')","type":"matching(type, 'MOBILE')"}}:construct_message_field{path=$.phone_numbers.*.type field_name=type value="matching(type, 'MOBILE')"}:build_field_value{path=$.phone_numbers.*.type field_type=Normal field_name=type value="matching(type, 'MOBILE')"}: pact_protobuf_plugin::protobuf: return=Ok(Some(MessageFieldValue { name: "type", raw_value: Some("MOBILE"), rtype: Enum(0, EnumDescriptorProto { name: Some("Type"), value: [EnumValueDescriptorProto { name: Some("MOBILE"), number: Some(0), options: None }, EnumValueDescriptorProto { name: Some("HOME"), number: Some(1), options: None }, EnumValueDescriptorProto { name: Some("WORK"), number: Some(2), options: None }], options: None, reserved_range: [], reserved_name: [] }) }))
2023-11-27T05:49:17.182046Z  INFO tokio-runtime-worker construct_protobuf_interaction_for_message{config={"address": Value { kind: Some(StructValue(Struct { fields: {"city": Value { kind: Some(StringValue("matching(regex, '^[A-Z]*$', 'MY CITY')")) }, "indian": Value { kind: Some(StringValue("matching(boolean, true)")) }, "state": Value { kind: Some(StringValue("matching(regex, '^[A-Z]*$', 'TELANGANA')")) }, "zip_code": Value { kind: Some(StringValue("matching(regex, '^[1-9]{1}[0-9]{5}$', '500001')")) }} })) }, "age": Value { kind: Some(StringValue("matching(integer, 50)")) }, "email": Value { kind: Some(StringValue("matching(equalTo, 'abc@gmail.com')")) }, "grades": Value { kind: Some(StructValue(Struct { fields: {"pact:match": Value { kind: Some(StringValue("eachKey(matching(regex, '^[a-z]*$', 'math')), eachValue(matching(integer, 10))")) }} })) }, "is_student": Value { kind: Some(StringValue("matching(boolean, true)")) }, "name": Value { kind: Some(StringValue("matching(regex, '^[A-Z]*$', 'JOHN')")) }, "pact:message-type": Value { kind: Some(StringValue("Person")) }, "pact:proto": Value { kind: Some(StringValue("/Users/pavanbaloju/Projects/quarkus-kafka-protobuf/src/main/proto/Person.proto")) }, "phone_numbers": Value { kind: Some(StructValue(Struct { fields: {"pact:match": Value { kind: Some(StringValue("eachValue(matching($'phone_number'))")) }, "phone_number": Value { kind: Some(StructValue(Struct { fields: {"number": Value { kind: Some(StringValue("matching(regex, '^[6-9]{1}[0-9]{9}$', '9999888870')")) }, "type": Value { kind: Some(StringValue("matching(type, 'MOBILE')")) }} })) }} })) }} message_name="Person" message_part="" metadata=None}:construct_message_field{path=$.phone_numbers field_name=phone_numbers value={"pact:match":"eachValue(matching($'phone_number'))","phone_number":{"number":"matching(regex, '^[6-9]{1}[0-9]{9}$', '9999888870')","type":"matching(type, 'MOBILE')"}}}:build_embedded_message_field_value{path=$.phone_numbers field="phone_numbers" value={"pact:match":"eachValue(matching($'phone_number'))","phone_number":{"number":"matching(regex, '^[6-9]{1}[0-9]{9}$', '9999888870')","type":"matching(type, 'MOBILE')"}}}:build_single_embedded_field_value{path=$.phone_numbers.* field_type=Repeated field=phone_numbers value={"number":"matching(regex, '^[6-9]{1}[0-9]{9}$', '9999888870')","type":"matching(type, 'MOBILE')"}}:construct_message_field{path=$.phone_numbers.*.type field_name=type value="matching(type, 'MOBILE')"}: pact_protobuf_plugin::protobuf: return=Ok(())
2023-11-27T05:49:17.182077Z  INFO tokio-runtime-worker construct_protobuf_interaction_for_message{config={"address": Value { kind: Some(StructValue(Struct { fields: {"city": Value { kind: Some(StringValue("matching(regex, '^[A-Z]*$', 'MY CITY')")) }, "indian": Value { kind: Some(StringValue("matching(boolean, true)")) }, "state": Value { kind: Some(StringValue("matching(regex, '^[A-Z]*$', 'TELANGANA')")) }, "zip_code": Value { kind: Some(StringValue("matching(regex, '^[1-9]{1}[0-9]{5}$', '500001')")) }} })) }, "age": Value { kind: Some(StringValue("matching(integer, 50)")) }, "email": Value { kind: Some(StringValue("matching(equalTo, 'abc@gmail.com')")) }, "grades": Value { kind: Some(StructValue(Struct { fields: {"pact:match": Value { kind: Some(StringValue("eachKey(matching(regex, '^[a-z]*$', 'math')), eachValue(matching(integer, 10))")) }} })) }, "is_student": Value { kind: Some(StringValue("matching(boolean, true)")) }, "name": Value { kind: Some(StringValue("matching(regex, '^[A-Z]*$', 'JOHN')")) }, "pact:message-type": Value { kind: Some(StringValue("Person")) }, "pact:proto": Value { kind: Some(StringValue("/Users/pavanbaloju/Projects/quarkus-kafka-protobuf/src/main/proto/Person.proto")) }, "phone_numbers": Value { kind: Some(StructValue(Struct { fields: {"pact:match": Value { kind: Some(StringValue("eachValue(matching($'phone_number'))")) }, "phone_number": Value { kind: Some(StructValue(Struct { fields: {"number": Value { kind: Some(StringValue("matching(regex, '^[6-9]{1}[0-9]{9}$', '9999888870')")) }, "type": Value { kind: Some(StringValue("matching(type, 'MOBILE')")) }} })) }} })) }} message_name="Person" message_part="" metadata=None}:construct_message_field{path=$.phone_numbers field_name=phone_numbers value={"pact:match":"eachValue(matching($'phone_number'))","phone_number":{"number":"matching(regex, '^[6-9]{1}[0-9]{9}$', '9999888870')","type":"matching(type, 'MOBILE')"}}}:build_embedded_message_field_value{path=$.phone_numbers field="phone_numbers" value={"pact:match":"eachValue(matching($'phone_number'))","phone_number":{"number":"matching(regex, '^[6-9]{1}[0-9]{9}$', '9999888870')","type":"matching(type, 'MOBILE')"}}}:build_single_embedded_field_value{path=$.phone_numbers.* field_type=Repeated field=phone_numbers value={"number":"matching(regex, '^[6-9]{1}[0-9]{9}$', '9999888870')","type":"matching(type, 'MOBILE')"}}: pact_protobuf_plugin::protobuf: return=Ok(Some(MessageFieldValue { name: "phone_numbers", raw_value: None, rtype: Message(MessageBuilder { file_descriptor: FileDescriptorProto { name: Some("Person.proto"), package: None, dependency: [], public_dependency: [], weak_dependency: [], message_type: [DescriptorProto { name: Some("Person"), field: [FieldDescriptorProto { name: Some("name"), number: Some(1), label: Some(Optional), r#type: Some(String), type_name: None, extendee: None, default_value: None, oneof_index: None, json_name: Some("name"), options: None, proto3_optional: None }, FieldDescriptorProto { name: Some("age"), number: Some(2), label: Some(Optional), r#type: Some(Int32), type_name: None, extendee: None, default_value: None, oneof_index: None, json_name: Some("age"), options: None, proto3_optional: None }, FieldDescriptorProto { name: Some("email"), number: Some(3), label: Some(Optional), r#type: Some(String), type_name: None, extendee: None, default_value: None, oneof_index: None, json_name: Some("email"), options: None, proto3_optional: None }, FieldDescriptorProto { name: Some("address"), number: Some(4), label: Some(Optional), r#type: Some(Message), type_name: Some(".Address"), extendee: None, default_value: None, oneof_index: None, json_name: Some("address"), options: None, proto3_optional: None }, FieldDescriptorProto { name: Some("phone_numbers"), number: Some(5), label: Some(Repeated), r#type: Some(Message), type_name: Some(".PhoneNumber"), extendee: None, default_value: None, oneof_index: None, json_name: Some("phoneNumbers"), options: None, proto3_optional: None }, FieldDescriptorProto { name: Some("is_student"), number: Some(6), label: Some(Optional), r#type: Some(Bool), type_name: None, extendee: None, default_value: None, oneof_index: None, json_name: Some("isStudent"), options: None, proto3_optional: None }, FieldDescriptorProto { name: Some("grades"), number: Some(7), label: Some(Repeated), r#type: Some(Message), type_name: Some(".Person.GradesEntry"), extendee: None, default_value: None, oneof_index: None, json_name: Some("grades"), options: None, proto3_optional: None }], extension: [], nested_type: [DescriptorProto { name: Some("GradesEntry"), field: [FieldDescriptorProto { name: Some("key"), number: Some(1), label: Some(Optional), r#type: Some(String), type_name: None, extendee: None, default_value: None, oneof_index: None, json_name: Some("key"), options: None, proto3_optional: None }, FieldDescriptorProto { name: Some("value"), number: Some(2), label: Some(Optional), r#type: Some(Int32), type_name: None, extendee: None, default_value: None, oneof_index: None, json_name: Some("value"), options: None, proto3_optional: None }], extension: [], nested_type: [], enum_type: [], extension_range: [], oneof_decl: [], options: Some(MessageOptions { message_set_wire_format: None, no_standard_descriptor_accessor: None, deprecated: None, map_entry: Some(true), uninterpreted_option: [] }), reserved_range: [], reserved_name: [] }], enum_type: [], extension_range: [], oneof_decl: [], options: None, reserved_range: [], reserved_name: [] }, DescriptorProto { name: Some("Address"), field: [FieldDescriptorProto { name: Some("city"), number: Some(2), label: Some(Optional), r#type: Some(String), type_name: None, extendee: None, default_value: None, oneof_index: None, json_name: Some("city"), options: None, proto3_optional: None }, FieldDescriptorProto { name: Some("state"), number: Some(3), label: Some(Optional), r#type: Some(String), type_name: None, extendee: None, default_value: None, oneof_index: None, json_name: Some("state"), options: None, proto3_optional: None }, FieldDescriptorProto { name: Some("zip_code"), number: Some(4), label: Some(Optional), r#type: Some(String), type_name: None, extendee: None, default_value: None, oneof_index: None, json_name: Some("zipCode"), options: None, proto3_optional: None }, FieldDescriptorProto { name: Some("indian"), number: Some(5), label: Some(Optional), r#type: Some(Bool), type_name: None, extendee: None, default_value: None, oneof_index: None, json_name: Some("indian"), options: None, proto3_optional: None }], extension: [], nested_type: [], enum_type: [], extension_range: [], oneof_decl: [], options: None, reserved_range: [], reserved_name: [] }, DescriptorProto { name: Some("PhoneNumber"), field: [FieldDescriptorProto { name: Some("number"), number: Some(1), label: Some(Optional), r#type: Some(String), type_name: None, extendee: None, default_value: None, oneof_index: None, json_name: Some("number"), options: None, proto3_optional: None }, FieldDescriptorProto { name: Some("type"), number: Some(2), label: Some(Optional), r#type: Some(Enum), type_name: Some(".PhoneNumber.Type"), extendee: None, default_value: None, oneof_index: None, json_name: Some("type"), options: None, proto3_optional: None }], extension: [], nested_type: [], enum_type: [EnumDescriptorProto { name: Some("Type"), value: [EnumValueDescriptorProto { name: Some("MOBILE"), number: Some(0), options: None }, EnumValueDescriptorProto { name: Some("HOME"), number: Some(1), options: None }, EnumValueDescriptorProto { name: Some("WORK"), number: Some(2), options: None }], options: None, reserved_range: [], reserved_name: [] }], extension_range: [], oneof_decl: [], options: None, reserved_range: [], reserved_name: [] }], enum_type: [], service: [], extension: [], options: Some(FileOptions { java_package: Some("com.example.kafkaprotobuf"), java_outer_classname: None, java_multiple_files: Some(true), java_generate_equals_and_hash: None, java_string_check_utf8: None, optimize_for: None, go_package: None, cc_generic_services: None, java_generic_services: None, py_generic_services: None, php_generic_services: None, deprecated: None, cc_enable_arenas: None, objc_class_prefix: None, csharp_namespace: None, swift_prefix: None, php_class_prefix: None, php_namespace: None, php_metadata_namespace: None, ruby_package: None, uninterpreted_option: [] }), source_code_info: None, syntax: Some("proto3") }, descriptor: DescriptorProto { name: Some("PhoneNumber"), field: [FieldDescriptorProto { name: Some("number"), number: Some(1), label: Some(Optional), r#type: Some(String), type_name: None, extendee: None, default_value: None, oneof_index: None, json_name: Some("number"), options: None, proto3_optional: None }, FieldDescriptorProto { name: Some("type"), number: Some(2), label: Some(Optional), r#type: Some(Enum), type_name: Some(".PhoneNumber.Type"), extendee: None, default_value: None, oneof_index: None, json_name: Some("type"), options: None, proto3_optional: None }], extension: [], nested_type: [], enum_type: [EnumDescriptorProto { name: Some("Type"), value: [EnumValueDescriptorProto { name: Some("MOBILE"), number: Some(0), options: None }, EnumValueDescriptorProto { name: Some("HOME"), number: Some(1), options: None }, EnumValueDescriptorProto { name: Some("WORK"), number: Some(2), options: None }], options: None, reserved_range: [], reserved_name: [] }], extension_range: [], oneof_decl: [], options: None, reserved_range: [], reserved_name: [] }, message_name: "PhoneNumber", fields: {"number": FieldValueInner { values: [MessageFieldValue { name: "number", raw_value: Some("9999888870"), rtype: String("9999888870") }], descriptor: FieldDescriptorProto { name: Some("number"), number: Some(1), label: Some(Optional), r#type: Some(String), type_name: None, extendee: None, default_value: None, oneof_index: None, json_name: Some("number"), options: None, proto3_optional: None }, field_type: Normal, proto_type: String }, "type": FieldValueInner { values: [MessageFieldValue { name: "type", raw_value: Some("MOBILE"), rtype: Enum(0, EnumDescriptorProto { name: Some("Type"), value: [EnumValueDescriptorProto { name: Some("MOBILE"), number: Some(0), options: None }, EnumValueDescriptorProto { name: Some("HOME"), number: Some(1), options: None }, EnumValueDescriptorProto { name: Some("WORK"), number: Some(2), options: None }], options: None, reserved_range: [], reserved_name: [] }) }], descriptor: FieldDescriptorProto { name: Some("type"), number: Some(2), label: Some(Optional), r#type: Some(Enum), type_name: Some(".PhoneNumber.Type"), extendee: None, default_value: None, oneof_index: None, json_name: Some("type"), options: None, proto3_optional: None }, field_type: Normal, proto_type: Enum }} }) }))
2023-11-27T05:49:17.182199Z  INFO tokio-runtime-worker construct_protobuf_interaction_for_message{config={"address": Value { kind: Some(StructValue(Struct { fields: {"city": Value { kind: Some(StringValue("matching(regex, '^[A-Z]*$', 'MY CITY')")) }, "indian": Value { kind: Some(StringValue("matching(boolean, true)")) }, "state": Value { kind: Some(StringValue("matching(regex, '^[A-Z]*$', 'TELANGANA')")) }, "zip_code": Value { kind: Some(StringValue("matching(regex, '^[1-9]{1}[0-9]{5}$', '500001')")) }} })) }, "age": Value { kind: Some(StringValue("matching(integer, 50)")) }, "email": Value { kind: Some(StringValue("matching(equalTo, 'abc@gmail.com')")) }, "grades": Value { kind: Some(StructValue(Struct { fields: {"pact:match": Value { kind: Some(StringValue("eachKey(matching(regex, '^[a-z]*$', 'math')), eachValue(matching(integer, 10))")) }} })) }, "is_student": Value { kind: Some(StringValue("matching(boolean, true)")) }, "name": Value { kind: Some(StringValue("matching(regex, '^[A-Z]*$', 'JOHN')")) }, "pact:message-type": Value { kind: Some(StringValue("Person")) }, "pact:proto": Value { kind: Some(StringValue("/Users/pavanbaloju/Projects/quarkus-kafka-protobuf/src/main/proto/Person.proto")) }, "phone_numbers": Value { kind: Some(StructValue(Struct { fields: {"pact:match": Value { kind: Some(StringValue("eachValue(matching($'phone_number'))")) }, "phone_number": Value { kind: Some(StructValue(Struct { fields: {"number": Value { kind: Some(StringValue("matching(regex, '^[6-9]{1}[0-9]{9}$', '9999888870')")) }, "type": Value { kind: Some(StringValue("matching(type, 'MOBILE')")) }} })) }} })) }} message_name="Person" message_part="" metadata=None}:construct_message_field{path=$.phone_numbers field_name=phone_numbers value={"pact:match":"eachValue(matching($'phone_number'))","phone_number":{"number":"matching(regex, '^[6-9]{1}[0-9]{9}$', '9999888870')","type":"matching(type, 'MOBILE')"}}}:build_embedded_message_field_value{path=$.phone_numbers field="phone_numbers" value={"pact:match":"eachValue(matching($'phone_number'))","phone_number":{"number":"matching(regex, '^[6-9]{1}[0-9]{9}$', '9999888870')","type":"matching(type, 'MOBILE')"}}}: pact_protobuf_plugin::protobuf: return=Ok(())
2023-11-27T05:49:17.182218Z  INFO tokio-runtime-worker construct_protobuf_interaction_for_message{config={"address": Value { kind: Some(StructValue(Struct { fields: {"city": Value { kind: Some(StringValue("matching(regex, '^[A-Z]*$', 'MY CITY')")) }, "indian": Value { kind: Some(StringValue("matching(boolean, true)")) }, "state": Value { kind: Some(StringValue("matching(regex, '^[A-Z]*$', 'TELANGANA')")) }, "zip_code": Value { kind: Some(StringValue("matching(regex, '^[1-9]{1}[0-9]{5}$', '500001')")) }} })) }, "age": Value { kind: Some(StringValue("matching(integer, 50)")) }, "email": Value { kind: Some(StringValue("matching(equalTo, 'abc@gmail.com')")) }, "grades": Value { kind: Some(StructValue(Struct { fields: {"pact:match": Value { kind: Some(StringValue("eachKey(matching(regex, '^[a-z]*$', 'math')), eachValue(matching(integer, 10))")) }} })) }, "is_student": Value { kind: Some(StringValue("matching(boolean, true)")) }, "name": Value { kind: Some(StringValue("matching(regex, '^[A-Z]*$', 'JOHN')")) }, "pact:message-type": Value { kind: Some(StringValue("Person")) }, "pact:proto": Value { kind: Some(StringValue("/Users/pavanbaloju/Projects/quarkus-kafka-protobuf/src/main/proto/Person.proto")) }, "phone_numbers": Value { kind: Some(StructValue(Struct { fields: {"pact:match": Value { kind: Some(StringValue("eachValue(matching($'phone_number'))")) }, "phone_number": Value { kind: Some(StructValue(Struct { fields: {"number": Value { kind: Some(StringValue("matching(regex, '^[6-9]{1}[0-9]{9}$', '9999888870')")) }, "type": Value { kind: Some(StringValue("matching(type, 'MOBILE')")) }} })) }} })) }} message_name="Person" message_part="" metadata=None}:construct_message_field{path=$.phone_numbers field_name=phone_numbers value={"pact:match":"eachValue(matching($'phone_number'))","phone_number":{"number":"matching(regex, '^[6-9]{1}[0-9]{9}$', '9999888870')","type":"matching(type, 'MOBILE')"}}}: pact_protobuf_plugin::protobuf: return=Ok(())
2023-11-27T05:49:17.182401Z  INFO tokio-runtime-worker construct_protobuf_interaction_for_message{config={"address": Value { kind: Some(StructValue(Struct { fields: {"city": Value { kind: Some(StringValue("matching(regex, '^[A-Z]*$', 'MY CITY')")) }, "indian": Value { kind: Some(StringValue("matching(boolean, true)")) }, "state": Value { kind: Some(StringValue("matching(regex, '^[A-Z]*$', 'TELANGANA')")) }, "zip_code": Value { kind: Some(StringValue("matching(regex, '^[1-9]{1}[0-9]{5}$', '500001')")) }} })) }, "age": Value { kind: Some(StringValue("matching(integer, 50)")) }, "email": Value { kind: Some(StringValue("matching(equalTo, 'abc@gmail.com')")) }, "grades": Value { kind: Some(StructValue(Struct { fields: {"pact:match": Value { kind: Some(StringValue("eachKey(matching(regex, '^[a-z]*$', 'math')), eachValue(matching(integer, 10))")) }} })) }, "is_student": Value { kind: Some(StringValue("matching(boolean, true)")) }, "name": Value { kind: Some(StringValue("matching(regex, '^[A-Z]*$', 'JOHN')")) }, "pact:message-type": Value { kind: Some(StringValue("Person")) }, "pact:proto": Value { kind: Some(StringValue("/Users/pavanbaloju/Projects/quarkus-kafka-protobuf/src/main/proto/Person.proto")) }, "phone_numbers": Value { kind: Some(StructValue(Struct { fields: {"pact:match": Value { kind: Some(StringValue("eachValue(matching($'phone_number'))")) }, "phone_number": Value { kind: Some(StructValue(Struct { fields: {"number": Value { kind: Some(StringValue("matching(regex, '^[6-9]{1}[0-9]{9}$', '9999888870')")) }, "type": Value { kind: Some(StringValue("matching(type, 'MOBILE')")) }} })) }} })) }} message_name="Person" message_part="" metadata=None}: pact_protobuf_plugin::protobuf: return=Ok(InteractionResponse { contents: Some(Body { content_type: "application/protobuf;message=Person", content: Some([10, 4, 74, 79, 72, 78, 16, 50, 26, 13, 97, 98, 99, 64, 103, 109, 97, 105, 108, 46, 99, 111, 109, 34, 30, 18, 7, 77, 89, 32, 67, 73, 84, 89, 26, 9, 84, 69, 76, 65, 78, 71, 65, 78, 65, 34, 6, 53, 48, 48, 48, 48, 49, 40, 1, 42, 14, 10, 10, 57, 57, 57, 57, 56, 56, 56, 56, 55, 48, 16, 0, 48, 1]), content_type_hint: Binary }), rules: {"$.phone_numbers.*.type": MatchingRules { rule: [MatchingRule { r#type: "type", values: None }] }, "$.age": MatchingRules { rule: [MatchingRule { r#type: "integer", values: None }] }, "$.email": MatchingRules { rule: [MatchingRule { r#type: "equality", values: None }] }, "$.address.state": MatchingRules { rule: [MatchingRule { r#type: "regex", values: Some(Struct { fields: {"regex": Value { kind: Some(StringValue("^[A-Z]*$")) }} }) }] }, "$.phone_numbers.*.number": MatchingRules { rule: [MatchingRule { r#type: "regex", values: Some(Struct { fields: {"regex": Value { kind: Some(StringValue("^[6-9]{1}[0-9]{9}$")) }} }) }] }, "$.address.city": MatchingRules { rule: [MatchingRule { r#type: "regex", values: Some(Struct { fields: {"regex": Value { kind: Some(StringValue("^[A-Z]*$")) }} }) }] }, "$.address.indian": MatchingRules { rule: [MatchingRule { r#type: "boolean", values: None }] }, "$.phone_numbers.*": MatchingRules { rule: [MatchingRule { r#type: "type", values: None }] }, "$.is_student": MatchingRules { rule: [MatchingRule { r#type: "boolean", values: None }] }, "$.phone_numbers": MatchingRules { rule: [MatchingRule { r#type: "values", values: None }] }, "$.name": MatchingRules { rule: [MatchingRule { r#type: "regex", values: Some(Struct { fields: {"regex": Value { kind: Some(StringValue("^[A-Z]*$")) }} }) }] }, "$.grades": MatchingRules { rule: [MatchingRule { r#type: "each-key", values: Some(Struct { fields: {"rules": Value { kind: Some(ListValue(ListValue { values: [Value { kind: Some(StructValue(Struct { fields: {"match": Value { kind: Some(StringValue("regex")) }, "regex": Value { kind: Some(StringValue("^[a-z]*$")) }} })) }] })) }, "value": Value { kind: Some(StringValue("math")) }} }) }, MatchingRule { r#type: "each-value", values: Some(Struct { fields: {"rules": Value { kind: Some(ListValue(ListValue { values: [Value { kind: Some(StructValue(Struct { fields: {"match": Value { kind: Some(StringValue("integer")) }} })) }] })) }, "value": Value { kind: Some(StringValue("10")) }} }) }] }, "$.address.zip_code": MatchingRules { rule: [MatchingRule { r#type: "regex", values: Some(Struct { fields: {"regex": Value { kind: Some(StringValue("^[1-9]{1}[0-9]{5}$")) }} }) }] }}, generators: {}, message_metadata: Some(Struct { fields: {"contentType": Value { kind: Some(StringValue("application/protobuf;message=Person")) }} }), plugin_configuration: None, interaction_markup: "```protobuf\nmessage Person {\n    string name = 1;\n    int32 age = 2;\n    string email = 3;\n    message .Address address = 4;\n    message .PhoneNumber phone_numbers = 5;\n    bool is_student = 6;\n}\n```\n", interaction_markup_type: CommonMark, part_name: "", metadata_rules: {}, metadata_generators: {} })
